{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Federal Reserve Minutes Sentiment Analysis \n",
    "\n",
    "The objective of this notebook is to extract topics and sentiment from Federal Minutes (2004-Present), leveraging natural language techniques such as bag of words and Latent Dirichlet Allocation (LDA). Sentiment is calculated using FinBert\n",
    "\n",
    "4/13"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# <a name=\"data-o\"></a> Data Overview\n",
    "Data was web scrapped using [Webscraper.py]from https://www.federalreserve.gov/monetarypolicy/fomccalendars.htm and saved in the directory below. \n",
    "The year 2004 was chosen as the start-year given the acceleration of release dates to 3 weeks, and improved clarity in explanations of committee’s decisions and views [(Danker,2005)](https://www.federalreserve.gov/pubs/bulletin/2005/spring05_fomc.pdf)\n",
    "\n",
    "<br> \n",
    "In this section we will examine the transcripts' structure."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## <a name=\"sum\"></a>Summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pip install charset-normalizer==2.0.10\n",
      "pip install cycler==0.11.0\n",
      "pip install filelock==3.4.2\n",
      "pip install flake8==4.0.1\n",
      "pip install fonttools==4.29.0\n",
      "pip install funcy==1.17\n",
      "pip install future==0.18.2\n",
      "pip install gensim==4.1.2\n",
      "pip install huggingface-hub==0.4.0\n",
      "pip install idna==3.3\n",
      "pip install jinja2==3.0.3\n",
      "pip install joblib==1.1.0\n",
      "pip install kiwisolver==1.3.2\n",
      "pip install markupsafe==2.0.1\n",
      "pip install matplotlib==3.5.1\n",
      "pip install mccabe==0.6.1\n",
      "pip install nltk==3.6.7\n",
      "pip install numexpr==2.8.1\n",
      "pip install numpy==1.22.1\n",
      "pip install packaging==21.3\n",
      "pip install pandas==1.4.0\n",
      "pip install pep8==1.7.1\n",
      "pip install pillow==9.0.0\n",
      "pip install pycodestyle==2.8.0\n",
      "pip install pyflakes==2.4.0\n",
      "pip install pyldavis==3.3.1\n",
      "pip install pyparsing==3.0.7\n",
      "pip install pytz==2021.3\n",
      "pip install pyyaml==6.0\n",
      "pip install regex==2022.1.18\n",
      "pip install requests==2.27.1\n",
      "pip install sacremoses==0.0.47\n",
      "pip install scikit-learn==1.0.2\n",
      "pip install scipy==1.7.3\n",
      "pip install seaborn==0.11.2\n",
      "pip install sklearn==0.0\n",
      "pip install smart-open==5.2.1\n",
      "pip install threadpoolctl==3.0.0\n",
      "pip install tokenizers==0.11.4\n",
      "pip install torch==1.10.2\n",
      "pip install tqdm==4.62.3\n",
      "pip install transformers==4.16.1\n",
      "pip install urllib3==1.26.8\n"
     ]
    }
   ],
   "source": [
    "pip_packages = [\n",
    "    \"charset-normalizer==2.0.10\",\n",
    "    \"cycler==0.11.0\",\n",
    "    \"filelock==3.4.2\",\n",
    "    \"flake8==4.0.1\",\n",
    "    \"fonttools==4.29.0\",\n",
    "    \"funcy==1.17\",\n",
    "    \"future==0.18.2\",\n",
    "    \"gensim==4.1.2\",\n",
    "    \"huggingface-hub==0.4.0\",\n",
    "    \"idna==3.3\",\n",
    "    \"jinja2==3.0.3\",\n",
    "    \"joblib==1.1.0\",\n",
    "    \"kiwisolver==1.3.2\",\n",
    "    \"markupsafe==2.0.1\",\n",
    "    \"matplotlib==3.5.1\",\n",
    "    \"mccabe==0.6.1\",\n",
    "    \"nltk==3.6.7\",\n",
    "    \"numexpr==2.8.1\",\n",
    "    \"numpy==1.22.1\",\n",
    "    \"packaging==21.3\",\n",
    "    \"pandas==1.4.0\",\n",
    "    \"pep8==1.7.1\",\n",
    "    \"pillow==9.0.0\",\n",
    "    \"pycodestyle==2.8.0\",\n",
    "    \"pyflakes==2.4.0\",\n",
    "    \"pyldavis==3.3.1\",\n",
    "    \"pyparsing==3.0.7\",\n",
    "    \"pytz==2021.3\",\n",
    "    \"pyyaml==6.0\",\n",
    "    \"regex==2022.1.18\",\n",
    "    \"requests==2.27.1\",\n",
    "    \"sacremoses==0.0.47\",\n",
    "    \"scikit-learn==1.0.2\",\n",
    "    \"scipy==1.7.3\",\n",
    "    \"seaborn==0.11.2\",\n",
    "    \"sklearn==0.0\",\n",
    "    \"smart-open==5.2.1\",\n",
    "    \"threadpoolctl==3.0.0\",\n",
    "    \"tokenizers==0.11.4\",\n",
    "    \"torch==1.10.2\",\n",
    "    \"tqdm==4.62.3\",\n",
    "    \"transformers==4.16.1\",\n",
    "    \"urllib3==1.26.8\"\n",
    "]\n",
    "\n",
    "# Generate pip install commands\n",
    "for package in pip_packages:\n",
    "    print(f\"pip install {package}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import os\n",
    "import pandas as pd\n",
    "import numpy as np \n",
    "import re\n",
    "import string\n",
    "\n",
    "from utils.corpusutils import CorpusPreProcess, Document, Corpus\n",
    "from utils.featureutils import FeatureProcessor,find_closest\n",
    "\n",
    "\n",
    "from nltk.tokenize import WordPunctTokenizer\n",
    "from nltk.data import LazyLoader\n",
    "from nltk.stem.porter import PorterStemmer\n",
    "from nltk.stem import WordNetLemmatizer\n",
    "from nltk.tokenize.treebank import TreebankWordDetokenizer\n",
    "from nltk.corpus import stopwords\n",
    "from sklearn.decomposition import LatentDirichletAllocation\n",
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "\n",
    "from transformers import AutoTokenizer, AutoModelForSequenceClassification\n",
    "\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.metrics.pairwise import cosine_similarity\n",
    "from scipy.spatial.distance import jensenshannon\n",
    "import torch\n",
    "import joblib\n",
    "import pickle\n",
    "import pyLDAvis\n",
    "import pyLDAvis.lda_model\n",
    "pyLDAvis.enable_notebook()\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "current_directory = os.getcwd()\n",
    "root = os.path.join(current_directory,\"Minutes\")\n",
    "word_tokenizer = WordPunctTokenizer()\n",
    "sent_tokenizer = LazyLoader(\"tokenizers/punkt/english.pickle\")\n",
    "category_pattern = r'(\\d{4})/*'\n",
    "file_extension = r'*.txt'\n",
    "file_pattern = r'(\\d{8})/*'\n",
    "stemmer = PorterStemmer()\n",
    "lemmatizer = WordNetLemmatizer()\n",
    "stop_words = stopwords.words('english') + list(string.punctuation) + ['u','.','s','--','-','.\"',',\"','.)',')-','\".','—','),'] \n",
    "\n",
    "\n",
    "fed_mins = CorpusPreProcess(root=root,file_extension = file_extension,\n",
    "                            category_pattern=category_pattern,\n",
    "                            file_pattern=file_pattern,\n",
    "                            word_tokenizer = word_tokenizer,\n",
    "                            sent_tokenizer=sent_tokenizer,\n",
    "                            stemmer = stemmer,\n",
    "                            lemmatizer = lemmatizer,\n",
    "                            stop_words = stop_words\n",
    "                            )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total number of files: 143\n",
      "Number of paragraphs: 17241\n",
      "Number of sentences: 45009\n",
      "Number of words: 1238889\n",
      "\n",
      "First file: 20040128\n",
      "Last file: 20211215\n"
     ]
    }
   ],
   "source": [
    "fed_mins_ids = fed_mins.get_file_ids()\n",
    "\n",
    "print('Total number of files: '+str(len(fed_mins_ids)))\n",
    "print('Number of paragraphs: '+str(len(fed_mins.get_paras())))\n",
    "print('Number of sentences: '+str(len(fed_mins.get_sents())))\n",
    "print('Number of words: '+str(len(fed_mins.get_words())))\n",
    "print('\\n'+'First file: '+ fed_mins_ids[0])\n",
    "print('Last file: '+ fed_mins_ids[-1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#For each Category\n",
    "para_by_year = {}\n",
    "\n",
    "for cat in fed_mins.get_category_ids():\n",
    "    files = fed_mins.get_file_ids(category_id=cat)\n",
    "    para_by_year[cat] = {'nparas':sum(len(fed_mins.get_paras(file_id=f)) for f in files)/len(files),\n",
    "                        'nwords':sum(len(fed_mins.get_words(file_id=f)) for f in files)/len(files)}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'Paragraphs and words overtime'}>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pd.DataFrame.from_dict(para_by_year).T.sort_index().plot(kind='bar',secondary_y='nparas',figsize=(10,5),title='Paragraphs and words overtime')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see an acceleration in the amount of paragraphs and words overtime."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overwritting existing folder\n"
     ]
    }
   ],
   "source": [
    "start_regex = r\"\"\"(?i)(staff\\sreview\\sof\\sthe\\seconomic|the\\sinformation\\s[\\s]?(?:reviewed|received|provided)|the\\scommittee\\sthen\\sturned\\sto\\sa\\sdiscussion\\sof\\sthe\\seconomic\\soutlook|in\\sthe\\scommittee[\\']?s\\sdiscussion\\sof\\scurrent\\sand\\sprospective\\seconomic)\"\"\"\n",
    "end_regex = r\"\"\"(?i)(at\\sthe\\sconclusion\\sof\\s[\\s]?(?:the|this)\\s(?:discussion|meetings)|the\\scommitte\\svoted\\sto\\sauthorize|the\\svote\\sencompassed\\sapproval\\sof)\"\"\"\n",
    "file_stats = fed_mins.truncate_text(start_regex,end_regex,return_stats=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>size_pct_change</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>20200129.txt</th>\n",
       "      <td>-60.414296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20190130.txt</th>\n",
       "      <td>-59.268669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20180131.txt</th>\n",
       "      <td>-58.432987</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20140129.txt</th>\n",
       "      <td>-57.307791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20050202.txt</th>\n",
       "      <td>-56.184258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20060629.txt</th>\n",
       "      <td>-14.868293</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20060328.txt</th>\n",
       "      <td>-14.413643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20051101.txt</th>\n",
       "      <td>-14.146784</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20061212.txt</th>\n",
       "      <td>-13.915782</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20050322.txt</th>\n",
       "      <td>-13.067824</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>143 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              size_pct_change\n",
       "20200129.txt       -60.414296\n",
       "20190130.txt       -59.268669\n",
       "20180131.txt       -58.432987\n",
       "20140129.txt       -57.307791\n",
       "20050202.txt       -56.184258\n",
       "...                       ...\n",
       "20060629.txt       -14.868293\n",
       "20060328.txt       -14.413643\n",
       "20051101.txt       -14.146784\n",
       "20061212.txt       -13.915782\n",
       "20050322.txt       -13.067824\n",
       "\n",
       "[143 rows x 1 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.Series(file_stats).rename('size_pct_change').to_frame().sort_values(by='size_pct_change')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "At most files reduced by 60%"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Further pre-processing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1mExample Sentence\u001b[0m\n",
      "Total U . S . consumer prices, as measured by the PCE price index, increased slightly more than 1 - 1 / 2 percent over the 12 months ending in October.\n",
      "\n",
      "\u001b[1mTokenize\u001b[0m\n",
      "['Total', 'U', '.', 'S', '.', 'consumer', 'prices', ',', 'as', 'measured', 'by', 'the', 'PCE', 'price', 'index', ',', 'increased', 'slightly', 'more', 'than', '1', '-', '1', '/', '2', 'percent', 'over', 'the', '12', 'months', 'ending', 'in', 'October', '.']\n",
      "\n",
      "\u001b[1mStem tokens\u001b[0m\n",
      "['total', 'consum', 'price', 'measur', 'pce', 'price', 'index', 'increas', 'slightli', 'percent', 'month', 'end', 'octob']\n",
      "\n",
      "\u001b[1mLemmatize tokens\u001b[0m\n",
      "['total', 'consumer', 'price', 'measure', 'pce', 'price', 'index', 'increase', 'slightly', 'percent', 'month', 'end', 'october']\n"
     ]
    }
   ],
   "source": [
    "file_example = '20171213'\n",
    "sent_example = fed_mins.get_sents(file_id=file_example,stem=True,lemmatize=True)[32]\n",
    "print('\\033[1m'+\"Example Sentence\"+'\\033[0m')\n",
    "print(TreebankWordDetokenizer().detokenize(sent_example))\n",
    "\n",
    "print('\\n'+'\\033[1m'+\"Tokenize\"+'\\033[0m')\n",
    "print(sent_example)\n",
    "\n",
    "print('\\n'+'\\033[1m'+\"Stem tokens\"+'\\033[0m')\n",
    "sent_stemmed = sent_example.stem\n",
    "print(sent_stemmed)\n",
    "\n",
    "print('\\n'+'\\033[1m'+\"Lemmatize tokens\"+'\\033[0m')\n",
    "sent_lemmatized = sent_example.lemma\n",
    "print(sent_lemmatized)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# LDA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "paras = fed_mins.get_paras(flatten=True,stem=True)\n",
    "def return_self(x):return x\n",
    "\n",
    "#we can use lemmatization in tokenizer\n",
    "#but tokenizer is done before stop word removal\n",
    "\n",
    "vectorizer = CountVectorizer(tokenizer=return_self,lowercase=False,preprocessor=return_self)\n",
    "bag_of_words = vectorizer.fit_transform((doc.stem for doc in paras))\n",
    "\n",
    "num_topics = 6\n",
    "\n",
    "lda_model = LatentDirichletAllocation(n_components = num_topics,\n",
    "                                    max_iter = 20,\n",
    "                                    #doc_topic_prior = 0.5,\n",
    "                                    learning_method = 'online',\n",
    "                                    random_state =10,\n",
    "                                    n_jobs=-1)\n",
    "\n",
    "lda_transform = lda_model.fit_transform(bag_of_words)\n",
    "\n",
    "def summarize_topics(model, feature_names, no_top_words):\n",
    "    topics = pd.DataFrame()\n",
    "    \n",
    "    for topic_idx, topic in enumerate(model.components_):\n",
    "        top_words = [feature_names[i]for i in topic.argsort()[:-no_top_words - 1:-1]]\n",
    "        topics[\"Topic %d:\" % (topic_idx)] = top_words\n",
    "    \n",
    "    return topics\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>term</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>inflat</td>\n",
       "      <td>6301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>rate</td>\n",
       "      <td>5672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>particip</td>\n",
       "      <td>5530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>market</td>\n",
       "      <td>4969</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>price</td>\n",
       "      <td>4854</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       term  count\n",
       "0    inflat   6301\n",
       "1      rate   5672\n",
       "2  particip   5530\n",
       "3    market   4969\n",
       "4     price   4854"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## What are the most frequently used words\n",
    "term_counts = {i:j for i, j in zip(vectorizer.get_feature_names_out(), bag_of_words.toarray().sum(axis=0))}\n",
    "df_term_counts = pd.DataFrame(sorted(term_counts.items(), key=lambda x: x[1], reverse=True), columns=['term', 'count'])\n",
    "df_term_counts.head(5)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We could improve our modelling by eliminating frequent words that don't add much to a topic. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Topic 0:</th>\n",
       "      <th>Topic 1:</th>\n",
       "      <th>Topic 2:</th>\n",
       "      <th>Topic 3:</th>\n",
       "      <th>Topic 4:</th>\n",
       "      <th>Topic 5:</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>polici</td>\n",
       "      <td>quarter</td>\n",
       "      <td>market</td>\n",
       "      <td>particip</td>\n",
       "      <td>quarter</td>\n",
       "      <td>inflat</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>committe</td>\n",
       "      <td>spend</td>\n",
       "      <td>period</td>\n",
       "      <td>econom</td>\n",
       "      <td>rate</td>\n",
       "      <td>price</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>rate</td>\n",
       "      <td>busi</td>\n",
       "      <td>bank</td>\n",
       "      <td>market</td>\n",
       "      <td>consum</td>\n",
       "      <td>expect</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>would</td>\n",
       "      <td>product</td>\n",
       "      <td>loan</td>\n",
       "      <td>risk</td>\n",
       "      <td>increas</td>\n",
       "      <td>year</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>inflat</td>\n",
       "      <td>real</td>\n",
       "      <td>credit</td>\n",
       "      <td>note</td>\n",
       "      <td>declin</td>\n",
       "      <td>staff</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>feder</td>\n",
       "      <td>increas</td>\n",
       "      <td>yield</td>\n",
       "      <td>labor</td>\n",
       "      <td>growth</td>\n",
       "      <td>measur</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>econom</td>\n",
       "      <td>manufactur</td>\n",
       "      <td>intermeet</td>\n",
       "      <td>growth</td>\n",
       "      <td>month</td>\n",
       "      <td>project</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>particip</td>\n",
       "      <td>vehicl</td>\n",
       "      <td>remain</td>\n",
       "      <td>busi</td>\n",
       "      <td>remain</td>\n",
       "      <td>energi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>member</td>\n",
       "      <td>motor</td>\n",
       "      <td>treasuri</td>\n",
       "      <td>continu</td>\n",
       "      <td>home</td>\n",
       "      <td>percent</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>fund</td>\n",
       "      <td>equip</td>\n",
       "      <td>spread</td>\n",
       "      <td>recent</td>\n",
       "      <td>continu</td>\n",
       "      <td>econom</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Topic 0:    Topic 1:   Topic 2:  Topic 3: Topic 4: Topic 5:\n",
       "0    polici     quarter     market  particip  quarter   inflat\n",
       "1  committe       spend     period    econom     rate    price\n",
       "2      rate        busi       bank    market   consum   expect\n",
       "3     would     product       loan      risk  increas     year\n",
       "4    inflat        real     credit      note   declin    staff\n",
       "5     feder     increas      yield     labor   growth   measur\n",
       "6    econom  manufactur  intermeet    growth    month  project\n",
       "7  particip      vehicl     remain      busi   remain   energi\n",
       "8    member       motor   treasuri   continu     home  percent\n",
       "9      fund       equip     spread    recent  continu   econom"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_results = summarize_topics(lda_model, vectorizer.get_feature_names_out(), 10)\n",
    "df_results\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Classifying topics generated by a Latent Dirichlet Allocation (LDA) model involves interpreting the most significant words within each topic and deducing a common theme or subject that these words suggest. Here's a possible classification for the topics based on the words you've provided:\n",
    "\n",
    "1. **Topic 0: Monetary Policy and Committee Decisions**  \n",
    "   - Key Words: policy, committee, rate, inflation, federal, economy, participants, members, funds  \n",
    "   - Interpretation: This topic seems to focus on discussions or decisions made by a monetary policy committee, likely regarding interest rates, inflation, and other economic policy measures.\n",
    "\n",
    "2. **Topic 1: Economic Activity in Sectors**  \n",
    "   - Key Words: quarter, spend, business, product, real, increase, manufacturing, vehicle, motor, equipment  \n",
    "   - Interpretation: It reflects economic activity, with a focus on consumer spending, business investment in manufacturing and vehicles, and overall production growth.\n",
    "\n",
    "3. **Topic 2: Financial Markets and Instruments**  \n",
    "   - Key Words: market, period, bank, loan, credit, yield, intermeet, treasury, spread  \n",
    "   - Interpretation: This topic likely deals with financial markets, banking activities, loans, credit conditions, and possibly government securities.\n",
    "\n",
    "4. **Topic 3: Economic Risks and Market Dynamics**  \n",
    "   - Key Words: participants, economy, market, risk, labor, growth, business, continue, recent  \n",
    "   - Interpretation: Discussions under this topic might center on economic risks, labor market conditions, and the continuous changes in market dynamics affecting growth.\n",
    "\n",
    "5. **Topic 4: Consumer Behavior and Economic Conditions**  \n",
    "   - Key Words: quarter, rate, consumer, increase, decline, growth, month, home, continue  \n",
    "   - Interpretation: It appears to focus on consumer behavior, interest rates, housing market trends, and the overall condition of economic growth and decline.\n",
    "\n",
    "6. **Topic 5: Inflation and Economic Projections**  \n",
    "   - Key Words: inflation, price, expect, year, staff, measure, project, energy, percent, economy  \n",
    "   - Interpretation: This topic discusses inflation rates, price changes, economic projections, and possibly the impact of energy prices on the economy.\n",
    "\n",
    "Each of these classifications is an attempt to capture the essence of the discussions encapsulated within each topic. The actual accuracy of these interpretations could vary based on the broader context of the documents analyzed and the specific focus of the discussions within those texts."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Dictionary with topivs\n",
    "topic_dict = {0 : 'Outlook',\n",
    "              1 : 'Economic Activity',\n",
    "              2 : 'Financial Market', \n",
    "              3 : 'Economic Risks', \n",
    "              4 : 'Consumer Behavior',\n",
    "              5 : 'Inflation'}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.4.0/pyLDAvis/js/ldavis.v1.0.0.css\">\n",
       "\n",
       "\n",
       "<div id=\"ldavis_el8848656696564326803059715\" style=\"background-color:white;\"></div>\n",
       "<script type=\"text/javascript\">\n",
       "\n",
       "var ldavis_el8848656696564326803059715_data = {\"mdsDat\": {\"x\": [0.2533297378612827, 0.12014735577528098, -0.12356818605508359, 0.02493514054613144, -0.07344279123759014, -0.2014012568900215], \"y\": [0.006737040138974141, -0.06764194834306911, -0.07716973895474562, -0.06350577496810884, 0.30530734770439605, -0.10372692557744644], \"topics\": [1, 2, 3, 4, 5, 6], \"cluster\": [1, 1, 1, 1, 1, 1], \"Freq\": [21.913542080625593, 20.955585324541353, 17.616883621760827, 17.01648317485468, 14.29082538547812, 8.206680412739424]}, \"tinfo\": {\"Term\": [\"inflat\", \"particip\", \"quarter\", \"committe\", \"polici\", \"price\", \"spend\", \"loan\", \"busi\", \"expect\", \"bank\", \"yield\", \"member\", \"credit\", \"staff\", \"feder\", \"period\", \"fund\", \"consum\", \"real\", \"product\", \"would\", \"note\", \"treasuri\", \"spread\", \"risk\", \"market\", \"monetari\", \"intermeet\", \"project\", \"member\", \"target\", \"appropri\", \"statement\", \"stanc\", \"maximum\", \"goal\", \"guidanc\", \"warrant\", \"monitor\", \"achiev\", \"remov\", \"mandat\", \"decid\", \"languag\", \"promot\", \"evolv\", \"symmetr\", \"curv\", \"therebi\", \"consid\", \"tool\", \"foster\", \"postmeet\", \"minut\", \"necessari\", \"dual\", \"quot\", \"reaction\", \"reiter\", \"committe\", \"monetari\", \"polici\", \"maintain\", \"decis\", \"action\", \"feder\", \"commun\", \"assess\", \"agre\", \"rang\", \"path\", \"would\", \"fund\", \"adjust\", \"accommod\", \"object\", \"meet\", \"purchas\", \"rate\", \"time\", \"econom\", \"outlook\", \"inflat\", \"particip\", \"current\", \"expect\", \"longer\", \"percent\", \"condit\", \"market\", \"risk\", \"term\", \"like\", \"increas\", \"contact\", \"district\", \"vulner\", \"vaccin\", \"valuat\", \"skill\", \"distanc\", \"cautiou\", \"optim\", \"anecdot\", \"resili\", \"covid\", \"resolv\", \"find\", \"variant\", \"perman\", \"tariff\", \"age\", \"cyclic\", \"occup\", \"hardship\", \"social\", \"layoff\", \"demograph\", \"undertaken\", \"foreclosur\", \"reluct\", \"workforc\", \"afford\", \"human\", \"burden\", \"viru\", \"cite\", \"problem\", \"shortag\", \"sourc\", \"restrict\", \"constraint\", \"particip\", \"difficulti\", \"affect\", \"note\", \"wage\", \"fiscal\", \"mani\", \"observ\", \"comment\", \"uncertainti\", \"risk\", \"report\", \"could\", \"household\", \"sever\", \"factor\", \"number\", \"downsid\", \"prospect\", \"busi\", \"labor\", \"possibl\", \"saw\", \"activ\", \"financi\", \"concern\", \"sector\", \"demand\", \"recent\", \"growth\", \"econom\", \"improv\", \"market\", \"spend\", \"continu\", \"hous\", \"outlook\", \"gener\", \"condit\", \"like\", \"remain\", \"economi\", \"would\", \"support\", \"increas\", \"price\", \"china\", \"famili\", \"singl\", \"permit\", \"canada\", \"m2\", \"dispos\", \"kingdom\", \"american\", \"automot\", \"mexico\", \"retrac\", \"bureau\", \"african\", \"hispan\", \"grew\", \"asian\", \"home\", \"lowest\", \"brazil\", \"multifamili\", \"america\", \"workweek\", \"japanes\", \"latin\", \"nonsupervisori\", \"mexican\", \"nonprim\", \"white\", \"weekli\", \"eme\", \"deficit\", \"hour\", \"worth\", \"four\", \"retail\", \"claim\", \"start\", \"nonfarm\", \"export\", \"hourli\", \"residenti\", \"person\", \"sale\", \"quarter\", \"advanc\", \"averag\", \"emerg\", \"consum\", \"consumpt\", \"third\", \"first\", \"februari\", \"juli\", \"fourth\", \"foreign\", \"march\", \"privat\", \"employ\", \"import\", \"new\", \"rose\", \"pace\", \"month\", \"increas\", \"declin\", \"rate\", \"growth\", \"real\", \"remain\", \"level\", \"year\", \"continu\", \"slow\", \"hous\", \"recent\", \"economi\", \"price\", \"sector\", \"activ\", \"econom\", \"core\", \"cpi\", \"\\u2011\", \"assum\", \"median\", \"forecast\", \"dissip\", \"dalla\", \"skew\", \"counterbalanc\", \"calcul\", \"disinflationari\", \"unrevis\", \"food\", \"assumpt\", \"\\u2013\", \"shelter\", \"chip\", \"staff\", \"blue\", \"medic\", \"nonmarket\", \"idiosyncrat\", \"residu\", \"markup\", \"outlookin\", \"apparel\", \"item\", \"occupi\", \"nonfuel\", \"profession\", \"project\", \"energi\", \"compens\", \"gdp\", \"headlin\", \"inflat\", \"pce\", \"price\", \"revis\", \"measur\", \"next\", \"prepar\", \"run\", \"base\", \"expect\", \"transitori\", \"stabl\", \"longer\", \"year\", \"survey\", \"percent\", \"commod\", \"littl\", \"consum\", \"chang\", \"month\", \"term\", \"meet\", \"real\", \"growth\", \"recent\", \"econom\", \"declin\", \"remain\", \"increas\", \"continu\", \"rate\", \"loan\", \"bond\", \"nonfinanci\", \"grade\", \"leverag\", \"lend\", \"sovereign\", \"specul\", \"dealer\", \"cmb\", \"money\", \"qualiti\", \"sloo\", \"swap\", \"c\", \"overnight\", \"yield\", \"paper\", \"municip\", \"p\", \"outstand\", \"default\", \"card\", \"origin\", \"score\", \"senior\", \"repo\", \"mutual\", \"ecb\", \"collater\", \"spread\", \"cre\", \"corpor\", \"delinqu\", \"financ\", \"bank\", \"commerci\", \"treasuri\", \"debt\", \"issuanc\", \"borrow\", \"credit\", \"investor\", \"liquid\", \"equiti\", \"institut\", \"standard\", \"european\", \"intermeet\", \"secur\", \"mortgag\", \"matur\", \"period\", \"market\", \"volatil\", \"dollar\", \"net\", \"remain\", \"financi\", \"condit\", \"fund\", \"index\", \"rate\", \"term\", \"asset\", \"declin\", \"increas\", \"continu\", \"equip\", \"nonresidenti\", \"local\", \"shipment\", \"vehicl\", \"motor\", \"mine\", \"outlay\", \"drill\", \"nondefens\", \"aircraft\", \"softwar\", \"factori\", \"tech\", \"assembl\", \"ga\", \"defens\", \"transport\", \"automak\", \"rig\", \"intellectu\", \"extract\", \"diffus\", \"e\", \"backlog\", \"ip\", \"unfil\", \"subtract\", \"gulf\", \"user\", \"manufactur\", \"truck\", \"order\", \"inventori\", \"schedul\", \"comput\", \"expenditur\", \"structur\", \"region\", \"govern\", \"output\", \"spend\", \"capit\", \"product\", \"industri\", \"busi\", \"quarter\", \"real\", \"exclud\", \"invest\", \"construct\", \"nomin\", \"good\", \"increas\", \"sector\", \"purchas\", \"declin\", \"appear\", \"indic\", \"survey\", \"second\", \"month\", \"first\", \"continu\"], \"Freq\": [6263.0, 5614.0, 3356.0, 2670.0, 2981.0, 4718.0, 1975.0, 1316.0, 2231.0, 3760.0, 1461.0, 1176.0, 1445.0, 1489.0, 1375.0, 2253.0, 2429.0, 1869.0, 2385.0, 2189.0, 1430.0, 3141.0, 1761.0, 988.0, 866.0, 1988.0, 4907.0, 1306.0, 1446.0, 1356.0, 1444.8904729796095, 802.6474348703882, 773.7784545820339, 438.3250882748663, 393.84428556117905, 308.1649265099359, 289.7521162022292, 263.8985333213799, 198.46454311162825, 172.82692452727014, 166.98062720942204, 146.84275441536178, 144.13852560001794, 135.90503634907714, 126.38265498864097, 119.64816961971826, 113.46835539665669, 107.8310948675549, 108.84834274108815, 97.0051223909147, 95.59023950514948, 94.93059546653423, 94.91958656433276, 90.61006781136983, 90.61171978855616, 90.26129734342369, 86.22788627522421, 85.99417335085622, 85.16145967226677, 83.68822598586533, 2428.8819978568495, 1197.718127462012, 2633.0225552091797, 383.8464900024939, 235.4010741544616, 299.13069502300146, 1886.965818996228, 346.5757170371465, 615.3063345431447, 715.9321998299812, 825.6580153359291, 478.35938576686374, 2025.6794067520043, 1285.8833854241032, 344.10732503997036, 667.9585306612423, 547.4936070049682, 952.4934676354593, 720.6074072404856, 2162.864482052141, 714.3363916923862, 1820.4664233763742, 971.8444746994516, 1996.2236131117309, 1765.5471856122797, 492.66984489708733, 1216.940506220558, 758.6033464003276, 775.9701465826255, 857.8676162202967, 1092.5203910628422, 740.0563136317661, 714.6713889522339, 593.807381075346, 588.7371829699758, 516.2230473675438, 280.99119056314476, 159.10807559618922, 116.66340121940752, 116.56950391407166, 82.30636463130287, 78.7105783053542, 70.19802295975714, 62.6189674474145, 89.28151797055321, 62.87569880681529, 102.12584040453025, 42.528204714864906, 41.43623981583874, 38.99129301019871, 38.208201531442754, 37.540189152642206, 36.226816944782925, 32.90506744569393, 31.395991272070464, 32.329347625139796, 95.14818667480584, 28.93751648265737, 28.058452602091112, 28.479094460978164, 28.103476934576424, 26.605391833908087, 26.493781201012148, 25.127895058556025, 23.233347190842064, 27.42150304385768, 109.85267804063318, 237.05902406911304, 42.88999313042845, 112.58677881625373, 88.26355174829231, 91.50261554955253, 100.57559158762378, 3643.839691872438, 88.97094054378698, 199.03281072875654, 1195.7962394164138, 327.0520377814805, 450.444955224208, 561.562897427176, 303.31320795333147, 250.65076520442932, 468.3490372578629, 1211.5655932895456, 675.3471983709774, 777.7018575132718, 720.1240238607984, 669.7197840239102, 459.37050992748254, 469.5034299411472, 359.3444293508928, 215.63071584417466, 1084.087679998524, 1164.8521381907526, 347.6242001335276, 305.8494914748369, 905.6910745459638, 968.1374088628254, 470.92553050286824, 705.9800692617871, 485.8156751043825, 994.4694958792631, 1101.754538133479, 1377.3011291776654, 576.7019781052203, 1280.3239629349182, 744.8799393025258, 1062.1577406672347, 478.2727039991656, 695.8900706104934, 566.491492893713, 746.9627611700791, 598.3829789955098, 735.9251633501154, 570.7394787595346, 631.9921778511753, 509.4640243987852, 617.7467793057857, 615.640002106535, 241.81494332369718, 230.92765497526906, 229.52316231343272, 145.10951255940245, 127.90181834389902, 116.8403997296323, 150.55933583755834, 103.99402308372608, 90.43338013349559, 87.17564891628858, 86.80867144209559, 77.90466465670072, 71.57383924472546, 70.38646195443329, 70.50915780961371, 69.97505656447613, 67.09958503581359, 808.3175250878407, 54.87685219545909, 48.878432993744994, 122.33853168337295, 43.60166262422412, 42.886495196697055, 39.0225056427597, 37.937055873571914, 33.50090025259674, 31.923113526308782, 31.644514100964344, 30.579569970624476, 29.896716775099637, 185.29660982794104, 189.68964596504634, 127.87932275754723, 95.38990691569079, 99.38881159600572, 297.8036506307688, 125.03672995050549, 349.21301063514784, 217.6588544019889, 616.8956920937119, 155.57346005170214, 296.9146082888359, 228.31311923109368, 745.3293495192884, 1820.5864922100623, 312.1330349172228, 558.0590615140371, 296.8932898242336, 1170.8416607181323, 184.21661654285973, 432.7351737124615, 656.1555698458488, 351.8664157538986, 428.2354428676073, 416.51455700528663, 472.6889342686525, 426.3005252418499, 261.1506472180429, 678.2745652777116, 498.7980028996133, 448.95186202238307, 543.1698125238142, 783.5566814563655, 843.1983194974291, 1143.6203571373533, 899.0720086562592, 1300.5172892958199, 881.8388468941589, 681.3682765664682, 837.6388888160309, 657.5957681186683, 742.1708061374785, 790.7028092053944, 452.81217570815306, 426.72325788285826, 601.6490732533657, 495.23704655994266, 538.2698323886619, 459.64974856289285, 462.3895476890551, 462.59862583950337, 825.5963095660235, 198.0050525378775, 161.72921633612617, 151.68244276537175, 96.25056923202537, 806.7790713847743, 55.16520007508245, 34.373033098823335, 45.802679298106035, 27.94423213228903, 24.149541715937996, 19.684290271429887, 17.93458164234527, 330.75608940837367, 45.3572834489075, 34.591979234549264, 13.129834170575128, 13.364364056346437, 1284.9200219180009, 10.752444756337592, 10.659646494165285, 9.925575182741358, 8.753103759334115, 8.662653591888542, 8.528645960073964, 8.132802054249723, 8.130953764906895, 68.42598354998813, 6.564243916211085, 6.5210982366324775, 35.59779662452556, 1081.5051708596757, 1065.7740965133207, 534.9422652768328, 763.4936484374307, 152.2383580020802, 4266.525203588485, 548.3659470626808, 3073.8890630449378, 340.0638402401537, 1201.007663401403, 326.83123694401746, 192.68081745484417, 870.9806967227283, 516.5917149754553, 1950.4378845739368, 161.02228644862095, 254.8836808582935, 912.8271148183446, 1423.213072744012, 626.6628418032507, 945.451980103472, 201.66490745031612, 613.0786915496772, 915.5172001658837, 695.2810752291801, 862.6217228574437, 864.0507330801321, 623.0433667848577, 695.0479278011611, 839.8673249977514, 733.9661061253001, 926.9944158998588, 746.4201719508093, 743.818657258107, 765.4237465770151, 742.8630823235085, 774.463924953587, 1315.4726948299299, 779.1184800874074, 367.3560446151245, 296.37138729612303, 276.7602290343812, 369.50718424261254, 219.16033726095003, 201.854677581443, 189.80170861712296, 170.9819682545971, 157.53117655363857, 151.1059171025356, 147.96650213653317, 146.78809335352165, 146.3404695263134, 137.4470069616285, 1169.1927823304716, 133.09047554099917, 127.42580194987666, 116.19868965261551, 109.14359794440425, 107.82496332481804, 146.00648194536382, 94.75891173886795, 87.07851366596007, 86.90392928379613, 76.22509284043561, 74.85420227883452, 66.12935771427033, 56.92857775564471, 848.2355614502771, 221.2320419863142, 640.680387950962, 131.11060440056636, 463.0942897947936, 1315.5216457368338, 565.4098369529212, 877.5076783270376, 436.1924723353138, 562.8350332497573, 295.905963091207, 1201.6602913365566, 425.2690078805095, 319.03795566922497, 629.2222266918366, 222.94747915861788, 353.3132277585048, 205.31796849164786, 1044.6056700967636, 810.0146243460721, 687.7285782571239, 263.06011225958355, 1394.8204372022774, 1657.0772087979574, 295.40891962837844, 383.89101057315844, 517.5671549512317, 890.5028371262979, 656.9423486278054, 705.2330944843137, 582.7455472647582, 463.60918033499075, 762.9605363907929, 558.7202825241902, 410.5488268364238, 511.3637934493297, 479.354705527865, 462.7301409805599, 451.67002586578576, 231.0781218192896, 225.02139454515032, 212.9813552569011, 541.9571003430161, 511.5767630468782, 201.0670938659232, 185.2903315966825, 181.43200138286636, 156.82816091005375, 150.8754199343698, 142.0927631992056, 119.03264938468303, 111.31981424282976, 104.23519949748781, 104.15254070819279, 94.31805876339195, 87.41579014021293, 79.85569429195525, 61.94769213682685, 55.21820928556271, 41.618845926001214, 25.006426809250254, 24.967841071331655, 22.116890803491977, 18.76165671463384, 17.699719348212902, 14.101835122653984, 11.94473865729413, 11.613437315337755, 548.3814119541847, 33.261375237986286, 289.63127742371637, 389.2739244648136, 93.04175794737796, 44.671252223241666, 320.61094801238903, 205.12342195258626, 166.90362974604037, 400.14047646537654, 426.15482358340773, 931.6403535595839, 379.95244544218855, 676.3595867377687, 399.9567963311533, 818.7479994610705, 1024.392483904213, 638.0912057344037, 212.08239973429204, 379.2816294124215, 278.8646195290127, 295.05873854322465, 290.5797277725204, 587.3613552944256, 368.39640580693856, 334.7973037030623, 435.48889016242475, 320.12144507323524, 380.6615724372783, 305.5235016083515, 263.1724627641328, 298.7337066105216, 273.3650298000608, 309.3763032746595], \"Total\": [6263.0, 5614.0, 3356.0, 2670.0, 2981.0, 4718.0, 1975.0, 1316.0, 2231.0, 3760.0, 1461.0, 1176.0, 1445.0, 1489.0, 1375.0, 2253.0, 2429.0, 1869.0, 2385.0, 2189.0, 1430.0, 3141.0, 1761.0, 988.0, 866.0, 1988.0, 4907.0, 1306.0, 1446.0, 1356.0, 1445.7327422286337, 803.4894115472756, 774.6184654482533, 439.1657252073865, 394.68582457758697, 309.00652594688984, 290.5936821595474, 264.7381635343299, 199.3044731178387, 173.67183913395206, 167.82345454908835, 147.68337816445202, 144.9813609583345, 136.74510385059182, 127.22222113305597, 120.49010691282936, 114.31124211590998, 108.67341105219326, 109.71195660529766, 97.85378589208965, 96.43586106559367, 95.77114932252125, 95.76506714520984, 91.45017710125394, 91.45219533069768, 91.11116431771056, 87.07056052831696, 86.83845135805426, 86.00978683521951, 84.52804003700604, 2670.8010141795, 1306.6130267731542, 2981.315734115112, 412.77730717247823, 248.72943652351907, 320.1346773734993, 2253.9547693078857, 376.74976011600535, 718.4547602636925, 877.4824224249483, 1059.4136735880004, 579.6017196827266, 3141.9577019849858, 1869.305307476094, 416.6728456730578, 1015.3358926751063, 826.4583023570857, 1737.2809579934058, 1242.3474361851868, 5628.442835733592, 1236.561107438607, 4587.701277257448, 1951.1318100155488, 6263.425423868887, 5614.7639133106695, 758.3420839802401, 3760.9114360464164, 1787.3666003865185, 2003.4276656086395, 2651.474406553977, 4907.9271768366025, 1988.872056812037, 2534.491211064986, 1549.721289908787, 4182.24412681242, 517.0611529629382, 281.82762300325396, 159.94667758914244, 117.50290585504476, 117.42674131508285, 83.14183813858659, 79.59816021361846, 71.03893937596597, 63.479371232392204, 90.5092205065917, 63.757549193199615, 103.90485526684611, 43.36905611751067, 42.272478922931924, 39.83102922130701, 39.04577488810182, 38.38041539696961, 37.06792671543093, 33.74874621928028, 32.231670439446724, 33.19227575662818, 97.85717078684786, 29.779781242521743, 28.895118470100442, 29.333043904976833, 28.957820104968686, 27.444284816243254, 27.342021466351635, 26.010943596931853, 24.06967258762781, 28.426076232626663, 115.99719513159533, 257.8005278077675, 44.88371724081891, 122.23679811818184, 94.92022356105129, 98.79169156948822, 110.1812708761335, 5614.7639133106695, 99.70160332104957, 240.9563917372037, 1761.0964447134027, 422.74265893147015, 606.0923359681555, 775.8685575529494, 395.3874672688193, 320.52772312887777, 647.6574684988786, 1988.872056812037, 1019.0800504928673, 1262.9039455246893, 1162.3573677417148, 1067.4089413493575, 707.4819170829614, 730.4648613784451, 530.8997426329422, 284.3627434302556, 2231.925566976298, 2452.207742648674, 520.6855386178964, 456.4559527758031, 1969.6521005022687, 2176.204374553361, 842.2451405208403, 1562.5168917084802, 912.6831758329985, 2658.0915947519225, 3132.129572960317, 4587.701277257448, 1225.66567332336, 4907.9271768366025, 1975.4614656624715, 3895.935012971533, 906.4721625667252, 1951.1318100155488, 1321.4163436993258, 2651.474406553977, 1549.721289908787, 3754.5543006150897, 1570.7666968162225, 3141.9577019849858, 1156.9065381338066, 4182.24412681242, 4718.363290669838, 242.65673518936987, 231.76119594911796, 230.35620343317868, 146.03167614594474, 128.7365832992768, 117.67373649452045, 151.63322891148616, 104.83207969797, 91.2680616398498, 88.00771630635441, 87.64205557461891, 78.74970671170819, 72.4114727253595, 71.21993825675648, 71.34425485108709, 70.813229881841, 67.93240032389701, 819.4367533545519, 55.721118212469555, 49.71257769270525, 124.60192942022279, 44.43610449388882, 43.71935833344854, 39.864621525946724, 38.76943266752699, 34.33271904903134, 32.75798385637488, 32.48699952276068, 31.410900010445207, 30.732631386174315, 195.1903621769354, 200.91906043083495, 135.2245435288386, 100.61547505933325, 105.32061924256396, 334.1105841019164, 134.66073521593515, 400.32610223932244, 244.19641151393168, 747.2271806331903, 171.23965958211352, 347.7330205565973, 261.79131962360657, 972.8124946208491, 3356.627191146702, 417.7784397924119, 839.2861027438086, 415.4826338604418, 2385.8390243577164, 229.6523199654052, 696.1510905429263, 1251.457186154945, 551.7174216236648, 733.6165570570466, 708.9331825258583, 861.7678806150864, 744.597926373033, 372.08225049169295, 1503.1573755306833, 962.8776946894288, 830.2802713259426, 1144.7396063514775, 2040.718081923271, 2420.4576485381685, 4182.24412681242, 2900.1479906534973, 5628.442835733592, 3132.129572960317, 2189.326490088002, 3754.5543006150897, 2291.0318556698226, 3072.6899232755113, 3895.935012971533, 1015.1111805102458, 906.4721625667252, 2658.0915947519225, 1570.7666968162225, 4718.363290669838, 1562.5168917084802, 1969.6521005022687, 4587.701277257448, 826.4343933718584, 198.84096860581704, 162.57936887845622, 152.52163154855882, 97.09589782367023, 817.5546438162507, 56.008047609946864, 35.20871642935074, 46.92334316954396, 28.781622041872662, 24.988132314047963, 20.590937666360734, 18.7696631683991, 346.82539539685627, 47.70423751788037, 36.68694705026928, 13.966240961472025, 14.220412148871604, 1375.7372609246863, 11.5876092706683, 11.526205284234955, 10.761240990903186, 9.590898108588322, 9.503103688398292, 9.365584457452444, 8.971157587517542, 8.972607950052032, 76.42987269232793, 7.399895338855179, 7.356727636729378, 40.979992148487526, 1356.7310059283577, 1340.060331523384, 660.1591428758535, 972.4782255135785, 186.425069755745, 6263.425423868887, 745.0780760697128, 4718.363290669838, 455.3008756746785, 1832.7225727343855, 446.730295476659, 254.82650976816973, 1408.9057032870662, 797.9471536662462, 3760.9114360464164, 217.72930330994316, 380.14637974667613, 1787.3666003865185, 3072.6899232755113, 1186.7445683986239, 2003.4276656086395, 299.87180903331995, 1304.4151080267927, 2385.8390243577164, 1663.0473853696944, 2420.4576485381685, 2534.491211064986, 1737.2809579934058, 2189.326490088002, 3132.129572960317, 2658.0915947519225, 4587.701277257448, 2900.1479906534973, 3754.5543006150897, 4182.24412681242, 3895.935012971533, 5628.442835733592, 1316.8231668790695, 779.9583244843091, 368.19394937730937, 297.20854269921097, 277.5979144026355, 370.69178420014657, 220.00012825380313, 202.6995634122394, 190.6585345591696, 171.8184499352495, 158.37207556192564, 151.94834043200296, 148.8034474911532, 147.62530538361247, 147.17723996772065, 138.28446036521126, 1176.411556930552, 133.92821678037606, 128.26208840538493, 117.03520736217901, 109.98032530674033, 108.66188698064808, 147.30509211326486, 95.61095511034927, 87.91644647807122, 87.74127125123323, 77.062374024519, 75.69459489716976, 66.96720113237332, 57.76535490367111, 866.6921502884971, 225.53763105995094, 670.1993981656466, 133.74118092113585, 489.54150251590016, 1461.1208971576111, 616.5311924686278, 988.1432346575003, 477.3840932861987, 638.0967585555023, 322.92905037288034, 1489.5245497223589, 482.1331851139634, 354.2480111083351, 762.2259207183669, 238.25495094147772, 409.01115943257037, 217.6181429324759, 1446.6900112808516, 1078.5963493159215, 905.6570093116585, 293.9935315360233, 2429.600378034698, 4907.9271768366025, 366.6442275362963, 588.9513099177453, 1105.9904050367463, 3754.5543006150897, 2176.204374553361, 2651.474406553977, 1869.305307476094, 1042.1851041426664, 5628.442835733592, 2534.491211064986, 832.8022237845436, 2900.1479906534973, 4182.24412681242, 3895.935012971533, 452.4993318125283, 231.90821204652545, 225.85674333876852, 213.81021767408035, 544.0735533331319, 513.6428233237781, 201.89565480895456, 186.13414537802473, 182.26091251449978, 157.6566483479924, 151.7065051109904, 142.92220295646078, 119.86181004197991, 112.14864466159523, 105.06374887226286, 104.98259157283874, 95.14703765420138, 88.24666545709061, 80.68427322293371, 62.77618662924138, 56.046631584884835, 42.45098087840751, 25.83743779361517, 25.79768478485831, 22.949118903148968, 19.59016698780047, 18.52921583271077, 14.93542172334533, 12.77591310832289, 12.441931394123149, 641.5912649688916, 37.06913679894681, 354.15978819107136, 500.8148615448738, 109.36293498406634, 50.72526820649016, 447.9322390742582, 277.7713251488013, 229.02018460750725, 630.9355346917123, 695.2846758761974, 1975.4614656624715, 660.6348870776043, 1430.6567440152548, 787.8781120950958, 2231.925566976298, 3356.627191146702, 2189.326490088002, 346.577183171819, 1025.8309998202092, 610.4774695237977, 714.6038761715056, 751.0480821711499, 4182.24412681242, 1562.5168917084802, 1242.3474361851868, 2900.1479906534973, 1175.340976539428, 2169.3614748331293, 1186.7445683986239, 924.6312084329853, 2420.4576485381685, 1251.457186154945, 3895.935012971533], \"Category\": [\"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\"], \"logprob\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, -4.1892, -4.7771, -4.8137, -5.382, -5.489, -5.7344, -5.796, -5.8894, -6.1744, -6.3127, -6.3471, -6.4756, -6.4942, -6.553, -6.6257, -6.6804, -6.7335, -6.7844, -6.775, -6.8902, -6.9049, -6.9118, -6.912, -6.9584, -6.9584, -6.9623, -7.008, -7.0107, -7.0204, -7.0379, -3.6698, -4.3768, -3.5891, -5.5147, -6.0037, -5.7641, -3.9223, -5.6169, -5.0429, -4.8914, -4.7488, -5.2946, -3.8513, -4.3058, -5.624, -4.9608, -5.1596, -4.6059, -4.8849, -3.7858, -4.8936, -3.9581, -4.5858, -3.866, -3.9888, -5.2651, -4.3609, -4.8335, -4.8109, -4.7105, -4.4687, -4.8583, -4.8932, -5.0784, -5.087, -5.1737, -5.782, -6.3507, -6.661, -6.6618, -7.0098, -7.0545, -7.169, -7.2832, -6.9285, -7.2791, -6.7941, -7.6701, -7.6961, -7.7569, -7.7772, -7.7949, -7.8305, -7.9267, -7.9736, -7.9443, -6.8649, -8.0551, -8.086, -8.0711, -8.0844, -8.1392, -8.1434, -8.1963, -8.2747, -8.109, -6.7211, -5.952, -7.6616, -6.6966, -6.94, -6.9039, -6.8094, -3.2195, -6.932, -6.1268, -4.3337, -5.6302, -5.31, -5.0896, -5.7055, -5.8962, -5.2711, -4.3206, -4.9051, -4.7639, -4.8409, -4.9134, -5.2904, -5.2686, -5.536, -6.0467, -4.4318, -4.3599, -5.5692, -5.6972, -4.6116, -4.5449, -5.2656, -4.8607, -5.2345, -4.5181, -4.4156, -4.1924, -5.063, -4.2654, -4.8071, -4.4522, -5.2501, -4.8751, -5.0808, -4.8043, -5.0261, -4.8192, -5.0734, -4.9714, -5.1869, -4.9942, -4.9976, -5.7586, -5.8046, -5.8107, -6.2692, -6.3955, -6.4859, -6.2324, -6.6024, -6.7421, -6.7788, -6.783, -6.8913, -6.976, -6.9927, -6.991, -6.9986, -7.0406, -4.5518, -7.2416, -7.3574, -6.4399, -7.4716, -7.4882, -7.5826, -7.6108, -7.7352, -7.7834, -7.7922, -7.8264, -7.849, -6.0248, -6.0013, -6.3957, -6.6888, -6.6477, -5.5503, -6.4181, -5.3911, -5.8638, -4.822, -6.1996, -5.5533, -5.816, -4.6329, -3.7398, -5.5033, -4.9223, -5.5534, -4.1813, -6.0306, -5.1766, -4.7603, -5.3835, -5.1871, -5.2148, -5.0883, -5.1916, -5.6816, -4.7272, -5.0345, -5.1398, -4.9493, -4.5829, -4.5095, -4.2048, -4.4454, -4.0762, -4.4647, -4.7226, -4.5162, -4.7581, -4.6372, -4.5738, -5.1313, -5.1906, -4.8471, -5.0417, -4.9584, -5.1163, -5.1103, -5.1099, -4.496, -5.9238, -6.1261, -6.1903, -6.6451, -4.519, -7.2017, -7.6748, -7.3877, -7.8819, -8.0278, -8.2322, -8.3253, -5.4107, -7.3975, -7.6684, -8.6372, -8.6195, -4.0536, -8.8369, -8.8456, -8.9169, -9.0427, -9.053, -9.0686, -9.1162, -9.1164, -6.9863, -9.3304, -9.337, -7.6398, -4.226, -4.2406, -4.9299, -4.5742, -6.1866, -2.8535, -4.9051, -3.1814, -5.3829, -4.1211, -5.4226, -5.951, -4.4424, -4.9648, -3.6363, -6.1305, -5.6713, -4.3955, -3.9514, -4.7717, -4.3604, -5.9055, -4.7936, -4.3926, -4.6677, -4.4521, -4.4504, -4.7774, -4.6681, -4.4788, -4.6136, -4.3801, -4.5968, -4.6003, -4.5716, -4.6016, -4.5599, -3.8555, -4.3793, -5.1312, -5.3459, -5.4143, -5.1253, -5.6477, -5.73, -5.7915, -5.8959, -5.9779, -6.0195, -6.0405, -6.0485, -6.0516, -6.1143, -3.9734, -6.1465, -6.19, -6.2822, -6.3448, -6.357, -6.0538, -6.4862, -6.5707, -6.5727, -6.7038, -6.722, -6.8459, -6.9957, -4.2943, -5.6383, -4.575, -6.1615, -4.8996, -3.8555, -4.6999, -4.2604, -4.9594, -4.7045, -5.3475, -3.946, -4.9848, -5.2722, -4.593, -5.6306, -5.1701, -5.7129, -4.0861, -4.3404, -4.5041, -5.4651, -3.797, -3.6247, -5.3491, -5.0871, -4.7884, -4.2457, -4.5499, -4.479, -4.6697, -4.8985, -4.4003, -4.7118, -5.02, -4.8004, -4.8651, -4.9004, -4.3699, -5.0401, -5.0666, -5.1216, -4.1876, -4.2453, -5.1792, -5.2609, -5.2819, -5.4277, -5.4664, -5.5263, -5.7034, -5.7704, -5.8362, -5.837, -5.9362, -6.0122, -6.1026, -6.3565, -6.4715, -6.7543, -7.2637, -7.2652, -7.3865, -7.551, -7.6093, -7.8365, -8.0025, -8.0307, -4.1759, -6.9784, -4.8142, -4.5185, -5.9498, -6.6835, -4.7126, -5.1592, -5.3654, -4.491, -4.428, -3.6459, -4.5428, -3.9661, -4.4915, -3.7751, -3.551, -4.0243, -5.1259, -4.5446, -4.8521, -4.7957, -4.811, -4.1072, -4.5737, -4.6693, -4.4064, -4.7141, -4.5409, -4.7608, -4.91, -4.7833, -4.872, -4.7483], \"loglift\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 1.5175, 1.517, 1.517, 1.5161, 1.5159, 1.5153, 1.5152, 1.5149, 1.5138, 1.5132, 1.513, 1.5124, 1.5122, 1.5119, 1.5114, 1.5111, 1.5107, 1.5103, 1.5102, 1.5094, 1.5093, 1.5092, 1.5092, 1.5088, 1.5088, 1.5087, 1.5083, 1.5083, 1.5082, 1.5081, 1.4231, 1.431, 1.3938, 1.4454, 1.463, 1.4502, 1.3403, 1.4346, 1.3631, 1.3146, 1.2688, 1.3261, 1.0791, 1.1439, 1.3267, 1.0993, 1.1063, 0.9171, 0.9734, 0.5617, 0.9693, 0.5938, 0.8211, 0.3746, 0.3611, 1.0868, 0.3897, 0.661, 0.5696, 0.3896, 0.0157, 0.5295, 0.2521, 0.5588, -0.4426, 1.5611, 1.5598, 1.5575, 1.5556, 1.5554, 1.5527, 1.5516, 1.5509, 1.5491, 1.5491, 1.5488, 1.5455, 1.5432, 1.5428, 1.5415, 1.5411, 1.5406, 1.5398, 1.5374, 1.5365, 1.5364, 1.5347, 1.5341, 1.5334, 1.5332, 1.5328, 1.5317, 1.5313, 1.5282, 1.5274, 1.5268, 1.5083, 1.4789, 1.5173, 1.4805, 1.4901, 1.4861, 1.4715, 1.1304, 1.4489, 1.3716, 1.1756, 1.3061, 1.266, 1.2395, 1.2977, 1.3169, 1.2386, 1.0671, 1.1513, 1.0779, 1.084, 1.0966, 1.1309, 1.1208, 1.1725, 1.2861, 0.8406, 0.8184, 1.1587, 1.1624, 0.7859, 0.7528, 0.9814, 0.7683, 0.9322, 0.5796, 0.518, 0.3595, 0.8089, 0.219, 0.5874, 0.2631, 0.9234, 0.5318, 0.7158, 0.2959, 0.6112, -0.0668, 0.5504, -0.041, 0.7426, -0.3498, -0.4738, 1.7328, 1.7327, 1.7327, 1.73, 1.7298, 1.7292, 1.7292, 1.7283, 1.7271, 1.7268, 1.7268, 1.7255, 1.7247, 1.7245, 1.7245, 1.7244, 1.724, 1.7227, 1.721, 1.7194, 1.718, 1.7174, 1.7171, 1.715, 1.7146, 1.7118, 1.7105, 1.71, 1.7095, 1.7087, 1.6843, 1.6788, 1.6805, 1.683, 1.6783, 1.6213, 1.6622, 1.5997, 1.6213, 1.5446, 1.6404, 1.5783, 1.5995, 1.4699, 1.1245, 1.4448, 1.3282, 1.4002, 1.0245, 1.5159, 1.2609, 1.0906, 1.2865, 1.198, 1.2045, 1.1358, 1.1786, 1.3823, 0.9405, 1.0786, 1.1215, 0.9908, 0.7791, 0.6818, 0.4397, 0.5652, 0.2712, 0.4689, 0.5691, 0.2362, 0.4881, 0.3156, 0.1415, 0.929, 0.9829, 0.2506, 0.582, -0.4345, 0.5127, 0.2871, -0.558, 1.77, 1.7668, 1.7657, 1.7655, 1.7622, 1.7577, 1.7558, 1.747, 1.7468, 1.7415, 1.7369, 1.726, 1.7255, 1.7235, 1.7205, 1.7122, 1.7092, 1.7089, 1.7027, 1.6962, 1.6928, 1.6902, 1.6796, 1.6784, 1.6774, 1.6729, 1.6725, 1.6604, 1.6512, 1.6504, 1.6302, 1.5443, 1.542, 1.5607, 1.529, 1.5684, 1.3871, 1.4644, 1.3425, 1.4792, 1.3483, 1.4585, 1.4914, 1.29, 1.3362, 1.1144, 1.4693, 1.3712, 1.099, 1.0014, 1.1324, 1.02, 1.3742, 1.016, 0.8132, 0.8989, 0.7393, 0.6949, 0.7455, 0.6236, 0.4548, 0.4841, 0.1718, 0.4138, 0.1521, 0.0728, 0.1138, -0.2124, 1.9445, 1.9445, 1.9433, 1.9427, 1.9425, 1.9424, 1.9417, 1.9414, 1.941, 1.9407, 1.9402, 1.94, 1.9399, 1.9399, 1.9399, 1.9395, 1.9394, 1.9393, 1.939, 1.9384, 1.9379, 1.9378, 1.9367, 1.9366, 1.936, 1.936, 1.9346, 1.9344, 1.933, 1.931, 1.924, 1.9263, 1.9005, 1.9257, 1.89, 1.8406, 1.859, 1.8268, 1.8553, 1.82, 1.8582, 1.7308, 1.8201, 1.8409, 1.7538, 1.8791, 1.7992, 1.8874, 1.6199, 1.6592, 1.6703, 1.8344, 1.3906, 0.8598, 1.7295, 1.5176, 1.1862, 0.5066, 0.7478, 0.6212, 0.78, 1.1355, -0.0528, 0.4335, 1.2383, 0.2101, -0.2206, -0.185, 2.4984, 2.4966, 2.4965, 2.4963, 2.4963, 2.4962, 2.4961, 2.4957, 2.4957, 2.495, 2.4947, 2.4944, 2.4933, 2.4928, 2.4923, 2.4923, 2.4915, 2.4908, 2.4899, 2.4869, 2.4853, 2.4804, 2.4675, 2.4675, 2.4633, 2.457, 2.4544, 2.4428, 2.433, 2.4313, 2.3432, 2.3918, 2.2991, 2.2483, 2.3386, 2.3731, 2.1658, 2.197, 2.1838, 2.0448, 2.0107, 1.7486, 1.9471, 1.7511, 1.8222, 1.4974, 1.3134, 1.2674, 2.0091, 1.5052, 1.7167, 1.6157, 1.5506, 0.5373, 1.0553, 1.189, 0.6042, 1.1996, 0.7599, 1.1433, 1.2436, 0.4081, 0.979, -0.0329]}, \"token.table\": {\"Topic\": [1, 2, 4, 5, 1, 1, 4, 1, 2, 3, 4, 6, 1, 2, 3, 4, 1, 2, 3, 4, 6, 1, 2, 4, 6, 2, 3, 2, 1, 2, 4, 6, 3, 3, 2, 6, 4, 1, 2, 3, 4, 5, 6, 1, 3, 6, 1, 2, 4, 1, 5, 4, 1, 4, 6, 3, 1, 2, 3, 4, 5, 6, 6, 1, 2, 3, 4, 5, 1, 3, 4, 6, 4, 5, 2, 3, 5, 3, 2, 3, 2, 3, 4, 5, 6, 5, 4, 3, 2, 3, 5, 6, 3, 5, 2, 1, 2, 3, 4, 5, 6, 3, 4, 1, 2, 2, 3, 5, 5, 1, 2, 5, 6, 1, 4, 2, 4, 1, 6, 1, 3, 4, 3, 6, 1, 2, 5, 1, 2, 3, 4, 5, 6, 1, 1, 2, 2, 3, 4, 6, 2, 3, 4, 3, 4, 2, 1, 2, 3, 4, 5, 6, 4, 5, 6, 1, 2, 4, 2, 3, 4, 2, 5, 1, 2, 3, 4, 5, 1, 2, 4, 6, 1, 2, 4, 5, 1, 2, 5, 1, 1, 2, 6, 1, 2, 3, 4, 5, 6, 5, 6, 1, 3, 2, 5, 1, 2, 3, 4, 5, 6, 2, 1, 2, 6, 6, 4, 3, 4, 2, 2, 1, 3, 4, 5, 1, 2, 4, 6, 1, 6, 5, 1, 2, 3, 4, 1, 2, 3, 4, 1, 3, 1, 2, 3, 1, 2, 3, 4, 2, 3, 4, 6, 6, 3, 4, 5, 1, 3, 5, 1, 4, 6, 1, 2, 3, 4, 5, 2, 3, 4, 6, 2, 3, 4, 6, 1, 2, 3, 4, 6, 3, 3, 4, 5, 6, 1, 4, 5, 6, 2, 5, 6, 1, 2, 4, 5, 2, 1, 3, 4, 5, 6, 1, 2, 4, 5, 3, 4, 1, 4, 2, 1, 3, 4, 5, 1, 3, 4, 3, 4, 6, 1, 5, 6, 3, 4, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 6, 1, 2, 3, 5, 6, 5, 3, 1, 2, 3, 4, 6, 1, 6, 2, 3, 4, 3, 2, 3, 2, 3, 6, 3, 4, 2, 3, 4, 2, 3, 4, 2, 4, 1, 2, 3, 4, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 2, 3, 5, 6, 1, 4, 2, 5, 6, 1, 2, 3, 4, 5, 2, 3, 4, 6, 2, 3, 4, 5, 6, 1, 5, 6, 3, 5, 4, 6, 3, 3, 4, 5, 6, 3, 1, 2, 3, 4, 1, 3, 2, 5, 1, 2, 3, 4, 5, 6, 5, 1, 2, 3, 4, 6, 1, 4, 5, 6, 1, 3, 4, 5, 6, 3, 5, 6, 1, 2, 4, 5, 3, 3, 1, 2, 3, 1, 1, 2, 3, 4, 6, 2, 3, 6, 1, 3, 4, 6, 1, 2, 3, 4, 5, 4, 1, 5, 1, 1, 2, 3, 4, 6, 4, 4, 1, 2, 3, 4, 1, 3, 3, 6, 1, 1, 4, 5, 1, 1, 2, 3, 4, 5, 6, 2, 3, 5, 3, 6, 2, 3, 5, 5, 1, 1, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 4, 6, 1, 3, 4, 6, 6, 2, 3, 6, 5, 4, 4, 3, 6, 3, 1, 2, 1, 2, 3, 4, 5, 6, 1, 4, 1, 2, 3, 4, 2, 4, 2, 1, 2, 6, 5, 6, 1, 2, 4, 4, 1, 2, 4, 6, 5, 5, 5, 1, 2, 3, 4, 5, 6, 5, 1, 2, 3, 4, 1, 4, 3, 4, 1, 3, 4, 1, 2, 3, 4, 5, 2, 3, 3, 4, 1, 2, 4, 1, 2, 3, 1, 1, 4, 1, 2, 3, 4, 5, 6, 2, 3, 5, 6, 2, 6, 2, 3, 4, 6, 3, 4, 1, 2, 4, 6, 1, 1, 2, 6, 1, 3, 5, 6, 5, 1, 2, 3, 4, 5, 6, 1, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6, 1, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 2, 3, 6, 1, 2, 1, 2, 3, 4, 5, 6, 1, 5, 1, 2, 3, 4, 5, 6, 2, 3, 4, 4, 2, 2, 2, 3, 4, 2, 3, 4, 3, 1, 3, 4, 6, 6, 1, 2, 4, 3, 4, 5, 6, 1, 2, 4, 6, 2, 3, 6, 1, 2, 4, 1, 6, 5, 3, 4, 5, 6, 2, 3, 5, 6, 1, 5, 5, 1, 2, 3, 4, 5, 6, 4, 6, 2, 6, 3, 4, 2, 5, 1, 2, 3, 4, 6, 2, 3, 6, 1, 2, 3, 5, 5, 2, 3, 4, 6, 3, 5, 1, 4, 5, 1, 4, 5, 1, 1, 2, 3, 5, 1, 2, 3, 1, 1, 2, 6, 6, 1, 2, 3, 4, 5, 6, 2, 3, 4, 5, 6, 5, 1, 1, 2, 6, 1, 2, 3, 4, 5, 6, 1, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 1, 2, 4, 6, 1, 5, 2, 6, 1, 2, 2, 6, 4, 6, 2, 2, 2, 3, 6, 1, 2, 1, 2, 3, 4, 5, 2, 2, 3, 4, 1, 3, 3, 2, 3, 2, 3, 1, 2, 3, 4, 6, 1, 2, 3, 4, 5, 6, 1, 5, 4, 4, 5], \"Freq\": [0.65791035736954, 0.004924478722825898, 0.06598801488586703, 0.2708463297554244, 0.9950933285737632, 0.9339819180262012, 0.0624737068913847, 0.10306388623058571, 0.4599797089897077, 0.2345591893523675, 0.17261931683940465, 0.029954528510367277, 0.8255877568511375, 0.0767988611024314, 0.08399875433078434, 0.011999822047254907, 0.021542519055009087, 0.11489343496004846, 0.746807327240315, 0.045478651338352515, 0.06941478362169594, 0.13695424206049311, 0.8258755809102465, 0.00415012854728767, 0.029050899831013693, 0.9611339129945636, 0.9828708324295585, 0.9711900068317993, 0.8159707610111586, 0.13789450011501425, 0.04558495871570719, 0.9953429478157609, 0.9901858072651532, 0.9861061841671004, 0.9833252292070973, 0.011048598080978621, 0.8916025356879221, 0.0740210728091479, 0.259499163296438, 0.24078119086194086, 0.07572270666682947, 0.0782751574533518, 0.27226141722904973, 0.9992015870059392, 0.9862745859199529, 0.9898752054473501, 0.8560037931605857, 0.13918760864399768, 0.00417562825931993, 0.5067229504771071, 0.49351453233670867, 0.9965799503764635, 0.04192499668924308, 0.9433124255079692, 0.9915191251578478, 0.988549682361413, 0.06553188456259797, 0.0011914888102290539, 0.6648507561078121, 0.17395736629344188, 0.052425507650078376, 0.04170210835801689, 0.9586424687085161, 0.04653961224720259, 0.0034220303122943084, 0.0034220303122943084, 0.04653961224720259, 0.9006783781958619, 0.2669349705946699, 0.06391400704379421, 0.6479125812086589, 0.02130466901459807, 0.9492898615285799, 0.9987713132173534, 0.040256520697004916, 0.04335317613523606, 0.9166100097164196, 0.9856660481958912, 0.9498321111589136, 0.9943175755184523, 0.4856792789324733, 0.044804361525135915, 0.06541436782669843, 0.037187620065862806, 0.36694772089086314, 0.9920012091001377, 0.9604559355765677, 0.9942783684295518, 0.16802019113919564, 0.1241230240848112, 0.13320519657882177, 0.5752042579540031, 0.006788631578540995, 0.9911402104669853, 0.9853750719662706, 0.20143743524513566, 0.01022219820646957, 0.1172546264859745, 0.4179075149115501, 0.2194766085506702, 0.03367312350366447, 0.9972935629054048, 0.914178848257331, 0.07757936017459699, 0.9193154180689743, 0.06683462692794641, 0.928258707332589, 0.9952365422016207, 0.9867506240557613, 0.2152699907716141, 0.7830835896184803, 0.9164175420512078, 0.08109889752665557, 0.9094649833904666, 0.09023510127505247, 0.3234715537705712, 0.6736211738314987, 0.9210357556515893, 0.07962845149725556, 0.010603503830161128, 0.177229992589836, 0.8104106498766005, 0.09857020330865916, 0.8871318297779325, 0.23152404284507114, 0.5592196111796334, 0.20896528995247446, 0.3235935439841227, 0.2817300435386243, 0.02074317589641812, 0.0720353926584702, 0.26588980012681407, 0.03582912200290403, 0.9954803009920012, 0.08168357406330753, 0.9166712200437845, 0.06552248362450126, 0.4324483919217083, 0.04586573853715088, 0.4570193232808963, 0.1253227887327783, 0.490812660889911, 0.38393202166964857, 0.8012111527012561, 0.19594837973672025, 0.9979477225143343, 0.13552587459544926, 0.272591815947665, 0.20303213410037949, 0.19071160004624774, 0.11884181806381251, 0.07931343797347315, 0.9994743764594718, 0.9564317750126812, 0.04327070432974688, 0.38403554103910936, 0.6160405173782002, 0.9728430162575435, 0.9816673122545226, 0.009624189335828653, 0.9957706472075974, 0.017735399548187796, 0.9798808250373758, 0.0006713551651004314, 0.1624679499543044, 0.017455234292611217, 0.012084392971807766, 0.8069689084507186, 0.650102388373907, 0.25318389161823557, 0.08307596443723354, 0.014505327123961412, 0.9935106744303266, 0.9778141026509445, 0.9656699660785383, 0.9965460001006919, 0.0020947493099659803, 0.08378997239863922, 0.9133106991451675, 0.9945511478684756, 0.9448017222431939, 0.032163462884874684, 0.02010216430304668, 0.0072410097924927, 0.0989604671640669, 0.3099841811167113, 0.2572282526285502, 0.17619790495065568, 0.1499923457016345, 0.993908747592742, 0.9879445783864534, 0.05474841449294293, 0.9456544321508324, 0.014954257067457441, 0.9795038379184624, 0.0010956704653696592, 0.5324958461696544, 0.1906466609743207, 0.01533938651517523, 0.20817738842023525, 0.05149651187237399, 0.9690218099978833, 0.07020950282473662, 0.8926636787716513, 0.040119715899849494, 0.9675882028123504, 0.9713010803133, 0.9958239436300879, 0.9820017363046264, 0.9924852507644251, 0.9970633715941876, 0.011885532610459158, 0.059427663052295784, 0.2767631165006918, 0.6520063603451881, 0.2542852993871903, 0.6762105368888988, 0.06780941316991743, 0.9930818270516479, 0.987704678575386, 0.9690792103434607, 0.9855570918894839, 0.3967128393956822, 0.3001503185977222, 0.10092200254956091, 0.20206197918670185, 0.30494662318145793, 0.3635167470492954, 0.3151327316802123, 0.016552426310475796, 0.04610883395893141, 0.9477926980447012, 0.12034197322623767, 0.16366508358768325, 0.7148313209638518, 0.2574580721219369, 0.28406872557123264, 0.4510505759655638, 0.00665266336232395, 0.11939760937338663, 0.01641717128884066, 0.7954865724501884, 0.06865362538969731, 0.998896502652218, 0.13381859266064997, 0.04067035659294263, 0.8252146547406747, 0.009190410197648704, 0.04595205098824352, 0.9420170452589922, 0.9885291937027472, 0.38663826272016355, 0.6116963559453333, 0.3235917730834276, 0.13374417572799022, 0.0002658929934950104, 0.5184913373152703, 0.023930369414550935, 0.006697441573306047, 0.2053882082480521, 0.07143937678193117, 0.716626248343747, 0.1458726379675253, 0.8257194277611294, 0.02810390272768836, 0.9893764320852971, 0.08480782130430653, 0.648779832977945, 0.1455867599057262, 0.12014441351443424, 0.9928099697336619, 0.9967156022560175, 0.6380077666644807, 0.08518853702622327, 0.11056384592765148, 0.16493950785928335, 0.8371951494747318, 0.030612859201778746, 0.05457074901186646, 0.0776413095697287, 0.018384549530011875, 0.9457829369328332, 0.03472637133446688, 0.25089555300248845, 0.4448111635648513, 0.002297578324198612, 0.3019017917996976, 0.9698981712131949, 0.04874317769305413, 0.5241889273220247, 0.1725987931426179, 0.03595808190471206, 0.21814569688858648, 0.0494974085954722, 0.7424611289320829, 0.18314041180324714, 0.0247487042977361, 0.043249428095760385, 0.9543707133131125, 0.012231598310445835, 0.987089983652979, 0.9669236116014016, 0.022047700346453803, 0.5488716980985605, 0.18218362917859196, 0.24600591965516877, 0.9920109997516134, 0.9399868773273451, 0.04747408471350228, 0.5882077610110878, 0.07758135936597081, 0.3343051303588197, 0.6879561058628441, 0.311880567432378, 0.9906404332554792, 0.21388653703804264, 0.7845934026924353, 0.1778394834606887, 0.4283282878244673, 0.09081165112886232, 0.03027055037628744, 0.19373152240823963, 0.07870343097834734, 0.9979570025227821, 0.03994418028906378, 0.48731899952657814, 0.08521425128333607, 0.38745854880391867, 0.004754843934199807, 0.11253130644272877, 0.052303283276197876, 0.19653354928025868, 0.6339791912266409, 0.9959336878804521, 0.9885158481939328, 0.07407100970625756, 0.3518372961047234, 0.2815975455212033, 0.2681881385916222, 0.024583912704232037, 0.9972117222372657, 0.9392675027026116, 0.9640797224821172, 0.18237890453546274, 0.8153409849820688, 0.9951747361885602, 0.012203504369388742, 0.9860431530466104, 0.022185321700569884, 0.9465737258909817, 0.029580428934093177, 0.9110039133498409, 0.08759653012979239, 0.5273190062963622, 0.4710569365869177, 0.0011031778374400883, 0.6194308394146041, 0.2727216334644854, 0.10754007628725765, 0.9555593212274255, 0.9383897001200344, 0.12254931301327972, 0.11527943851249194, 0.5182381965561574, 0.2440600725264469, 0.14033190595411438, 0.47076459148560457, 0.12401424247107781, 0.1117759948588004, 0.12727777516768513, 0.026924144747010315, 0.14083348129390955, 0.14776755762247215, 0.27353735585778016, 0.1829161514258757, 0.11453181246143067, 0.140355269133319, 0.14009027707232882, 0.3521447375722238, 0.4452184148052094, 0.06236895897055735, 0.22956063605688717, 0.23647511304655244, 0.1959101813738495, 0.14382112138503775, 0.01843860530577407, 0.17562771553749804, 0.05584620174686267, 0.38457725293862244, 0.052038506173212935, 0.5076927431532969, 0.3186754634921606, 0.681256614589704, 0.06295776830964755, 0.9359721555367604, 0.9813257004874651, 0.08225673715313851, 0.055298646825639335, 0.022119458730255732, 0.11750962450448359, 0.7223385741599138, 0.07387959671537171, 0.14576244757357124, 0.0019967458571722085, 0.7767341384399892, 0.25735233195942564, 0.07701073569997965, 0.13647472149363482, 0.15889556859616055, 0.36945656747205424, 0.11615047818532362, 0.881499164799331, 0.9698743258202961, 0.11753703336431605, 0.8823113304547991, 0.8897044781657195, 0.09158722569352995, 0.9783110564492888, 0.5834110420257573, 0.09950702352308477, 0.11995367219221177, 0.19628782722361926, 0.9920627378530762, 0.20145112153769715, 0.4750820983631927, 0.15006885167180678, 0.17331321184923337, 0.9903930215793222, 0.9801536258184282, 0.9738150782179583, 0.9981338021784344, 0.1929261694489943, 0.21431391221596424, 0.28720683144216796, 0.07813073378138004, 0.1370561475271136, 0.09078878562305613, 0.9978461134914426, 0.3832947278119677, 0.38587583709016277, 0.12518379999246085, 0.0451694123684137, 0.06001079071803535, 0.03669745373961853, 0.0084686431706812, 0.900499057149101, 0.05363474008098093, 0.026065322143832177, 0.16559145832552205, 0.4699424257108566, 0.272152628266483, 0.06592993248145786, 0.0007594034074977927, 0.9986154808595975, 0.9962066957749255, 0.4246470756675581, 0.03524738572734672, 0.5108073518899612, 0.029652562596021843, 0.9870584396795508, 0.9942745381034804, 0.9302836985647235, 0.002422613798345634, 0.06541057255533211, 0.9932311232847612, 0.12502117666158963, 0.7243494977712719, 0.08377707714436418, 0.04768849006679192, 0.019333171648699427, 0.07013811199904957, 0.07481398613231953, 0.8541263416773147, 0.09803948871518618, 0.5721208519543741, 0.23099715149331537, 0.09803948871518618, 0.22270094086939807, 0.26080256570249727, 0.05419803318505022, 0.12469622672650651, 0.33761707138206093, 0.9609651208514234, 0.10204306143492166, 0.8945775052461464, 0.9967427032687884, 0.10749035502197146, 0.07529781214737087, 0.15004998797483324, 0.65530922021009, 0.01200399903798666, 0.9887132428018698, 0.9543470490713301, 0.5479827517936874, 0.09209794147793066, 0.0005756121342370666, 0.3586063596296925, 0.9994931689604649, 0.9768610956126541, 0.9926741155212607, 0.9955637737235995, 0.9950553911903098, 0.9168743732477643, 0.08265645434954803, 0.9976506239461378, 0.9961315597433509, 0.06445062159803372, 0.046685386157550066, 0.34828124363552837, 0.3565441438404045, 0.06073231650583947, 0.12353035806289797, 0.061833563285247035, 0.17777149444508522, 0.7596694917901778, 0.001946878170182558, 0.9968016231334696, 0.016051115815831032, 0.979118064765693, 0.9901600822107622, 0.9908237186801334, 0.9878043011958901, 0.008137502783942305, 0.3625709573734293, 0.08047086086342946, 0.4683584935646793, 0.07956669388743587, 0.04697209044569697, 0.09635300604245532, 0.5407812464132805, 0.019270601208491066, 0.04576767787016628, 0.25051781571038384, 0.19922535118205367, 0.7319852790621523, 0.06715461275799563, 0.11195013442776222, 0.22529964553587148, 0.250488425782118, 0.41281612070237317, 0.995834946671307, 0.004095064271421322, 0.8927240111698482, 0.10237660678553305, 0.9967572813748607, 0.9515100117410394, 0.9292608546220007, 0.9850094028406815, 0.9960837434840676, 0.9903089805221609, 0.320822861062528, 0.6791223749217407, 0.15606500192887166, 0.643425885145348, 0.047914693574653576, 0.0027379824899802043, 0.04380771983968327, 0.10815030835421807, 0.6618603726769255, 0.3363751071374503, 0.1795706892037828, 0.7663368849119182, 0.04046663418676796, 0.012645823183364987, 0.9617869498336846, 0.9459593250251231, 0.9924483935003504, 0.17223863926384023, 0.008470752750680667, 0.8188394325657978, 0.9936099884197984, 0.9939068386634738, 0.49817239153732723, 0.35671603344648123, 0.14504401934677327, 0.8917466806213716, 0.060406911668334444, 0.05896865186670743, 0.2660780633009969, 0.6126986754931065, 0.9910863574552434, 0.9907114627209812, 0.9911547355235127, 0.20090967176298857, 0.08575412819151951, 0.38417849429800743, 0.19061917638000622, 0.014700707689974774, 0.1234859445957881, 0.9930692963537459, 0.3145279173383271, 0.6490032450627767, 0.016029169060277144, 0.02048171602146524, 0.8247042473608545, 0.17425759201557803, 0.26305967964310545, 0.7354933900225602, 0.3873361705645868, 0.14075876301445037, 0.47169159946331773, 0.1243002770045202, 0.03333881601776866, 0.04115903212070206, 0.22678626698506832, 0.5741684980837937, 0.9732166952481076, 0.9929352577935647, 0.8709226888340285, 0.126054599699662, 0.8831671096994711, 0.05735722588629303, 0.059369760127917344, 0.32649264746481466, 0.6683496548103265, 0.005761634955261435, 0.995077351236231, 0.23937854839159078, 0.7573780301570003, 0.0362413806368276, 0.13055374545196374, 0.1140225893720073, 0.6514970998690528, 0.06082617685830129, 0.006993950649212343, 0.08600248992719535, 0.7014578084686871, 0.010750311240899419, 0.20156833576686412, 0.9580311668324613, 0.0222797945774991, 0.1460867541248395, 0.2180816616600475, 0.1628622665602278, 0.47251026693010295, 0.12201076032135204, 0.8784774743137347, 0.16436566941094552, 0.02653436815602708, 0.797505176245036, 0.011793052513789813, 0.9959323887629717, 0.2356145505975286, 0.7595931780457639, 0.003516635083545203, 0.580352950390382, 0.06439422473124905, 0.0861272755780456, 0.2696508160621054, 0.9937587970404498, 0.0038729353186103747, 0.0002979181014315673, 0.542508862706884, 0.12274225778980573, 0.025620956723114787, 0.3050681358659249, 0.9903446993245292, 0.7796765518444936, 0.018878366872748027, 0.05191550890005708, 0.0698499574291677, 0.08023305920917913, 0.38429811994671914, 0.0907888762333673, 0.2311474128759508, 0.13751583210298687, 0.1355614727320142, 0.020609607912075553, 0.9882596286727916, 0.03471387220868328, 0.012332559863611163, 0.31105456544885934, 0.31744922611887993, 0.03243006482653306, 0.2914138219623675, 0.06357944938152991, 0.37395250109609907, 0.22647827531172196, 0.276137963586053, 0.0011286292789620697, 0.05868872250602762, 0.24451993214472473, 0.021832136798636135, 0.7291933690744469, 0.9937530784249243, 0.9838113902687565, 0.09854698331021201, 0.1960285938278812, 0.22319560003772343, 0.19815933941296687, 0.23731178953891596, 0.04714274607002034, 0.995372680575528, 0.9862141020443909, 0.0009812771818233127, 0.6623620977307361, 0.030419592636522694, 0.005887663090939876, 0.2943831545469938, 0.005887663090939876, 0.129409625602915, 0.854103528979239, 0.014378847289212777, 0.9470590130451277, 0.9881182824185404, 0.991490335493798, 0.9312524012739364, 0.060733852256995846, 0.010122308709499308, 0.0568673993105357, 0.8919202628705073, 0.050881357277847726, 0.9904798793162144, 0.1186028907148074, 0.12738829002701535, 0.7467589415376762, 0.006589049484155967, 0.9876356518145079, 0.3720701879567588, 0.6093906321670157, 0.018603509397837937, 0.4743436821677321, 0.12404567747296125, 0.2428499882921354, 0.15811456072257737, 0.3456583353050514, 0.017744267726132003, 0.618210287578439, 0.018454038435177282, 0.04522968222889538, 0.7658207559210695, 0.1881143601792694, 0.3264279917786156, 0.6703823186862844, 0.002190791891131648, 0.1463018526553912, 0.8503795185594613, 0.989575938123252, 0.4466645687851375, 0.2519923596293875, 0.0162226840963125, 0.2844377278220125, 0.45183511534908827, 0.29439681736626144, 0.01791980627446809, 0.23551745389300918, 0.24847108018673872, 0.7509760259375312, 0.9915516239887758, 0.2042328779112688, 0.627688202754817, 0.08525317380699753, 0.04496870706303166, 0.034663378361086905, 0.0028105441914394787, 0.9308159608489109, 0.9962105755146118, 0.9244352088701517, 0.07362758300735722, 0.9984536842165745, 0.980322306400724, 0.986266383277655, 0.9946006123870149, 0.037434323185071505, 0.24726355577507755, 0.44625653691677347, 0.1911120709974703, 0.0788091014422558, 0.970802642628292, 0.02043795037112194, 0.993547517898659, 0.0316054881399478, 0.927094318771802, 0.0316054881399478, 0.9954539651329234, 0.9965487670498003, 0.3771270728129157, 0.0663136195147543, 0.08504342044640247, 0.4717884991431375, 0.020768620085007475, 0.9784327684492411, 0.028936221903073853, 0.6707942350258029, 0.297253915913395, 0.004361297880357742, 0.9340446293766164, 0.06105817032500838, 0.9982623531556499, 0.036673815992722084, 0.03178397386035914, 0.06601286878689974, 0.8630571363620596, 0.07244094211639304, 0.05495519746760852, 0.8717892689179715, 0.9973455915603705, 0.018000418140070848, 0.24120560307694935, 0.7380171437429047, 0.9373689112585829, 0.2506684770472435, 0.43996639592085146, 0.1331136050526741, 0.05445556570336668, 0.10026739081889738, 0.021609351469589953, 0.00842641311895268, 0.09858903349174636, 0.5283361025583331, 0.1078580879225943, 0.257848241439952, 0.9957642398639747, 0.9938033503717866, 0.9993908923499898, 0.990088293911492, 0.989757837332219, 0.28210790271375963, 0.08640787509694177, 0.00039455650729197157, 0.3408968223002634, 0.2205570875762121, 0.06983650179067896, 0.9912748813517427, 0.6219914123273218, 0.03591174436069987, 0.01723763729313594, 0.3260786387951548, 0.5774077768618877, 0.21915617301060444, 0.14313890266744275, 0.05094774501722539, 0.0016173887307055679, 0.0064695549228222715, 0.9919479997057954, 0.10104289898306634, 0.16075006656396917, 0.7394503061942582, 0.9858729454463433, 0.1113198938594434, 0.8885351528053754, 0.0809298586117936, 0.8902284447297295, 0.276380662165266, 0.7226041893482933, 0.9545548730198211, 0.9714388435275004, 0.9589943004574043, 0.9644804829632888, 0.9957200560157622, 0.9963658932343374, 0.9791361348789234, 0.001837986782988711, 0.9961888363798813, 0.04310449053813457, 0.9482987918389605, 0.005454879280219973, 0.13909942164560932, 0.03272927568131984, 0.01636463784065992, 0.8045946938324461, 0.9940812925694262, 0.7735202329155271, 0.17741289745768968, 0.04731010598871725, 0.9934548728514114, 0.9761611240844185, 0.9869185534222652, 0.9509172550389813, 0.9835459997385603, 0.04969414493199466, 0.9441887537078985, 0.6448209021782947, 0.20114847491445323, 0.0031827290334565383, 0.12348988649811368, 0.02737146968772623, 0.05792969822683918, 0.07062216019788821, 0.24148222519277904, 0.463112138071866, 0.10967588933957755, 0.05727880274114436, 0.005950298565804753, 0.9936998604893937, 0.996436393606071, 0.9540177860000782, 0.02725765102857366], \"Term\": [\"accommod\", \"accommod\", \"accommod\", \"accommod\", \"achiev\", \"action\", \"action\", \"activ\", \"activ\", \"activ\", \"activ\", \"activ\", \"adjust\", \"adjust\", \"adjust\", \"adjust\", \"advanc\", \"advanc\", \"advanc\", \"advanc\", \"advanc\", \"affect\", \"affect\", \"affect\", \"affect\", \"afford\", \"african\", \"age\", \"agre\", \"agre\", \"agre\", \"aircraft\", \"america\", \"american\", \"anecdot\", \"anecdot\", \"apparel\", \"appear\", \"appear\", \"appear\", \"appear\", \"appear\", \"appear\", \"appropri\", \"asian\", \"assembl\", \"assess\", \"assess\", \"assess\", \"asset\", \"asset\", \"assum\", \"assumpt\", \"assumpt\", \"automak\", \"automot\", \"averag\", \"averag\", \"averag\", \"averag\", \"averag\", \"averag\", \"backlog\", \"bank\", \"bank\", \"bank\", \"bank\", \"bank\", \"base\", \"base\", \"base\", \"base\", \"blue\", \"bond\", \"borrow\", \"borrow\", \"borrow\", \"brazil\", \"burden\", \"bureau\", \"busi\", \"busi\", \"busi\", \"busi\", \"busi\", \"c\", \"calcul\", \"canada\", \"capit\", \"capit\", \"capit\", \"capit\", \"card\", \"card\", \"cautiou\", \"chang\", \"chang\", \"chang\", \"chang\", \"chang\", \"chang\", \"china\", \"chip\", \"cite\", \"cite\", \"claim\", \"claim\", \"cmb\", \"collater\", \"comment\", \"comment\", \"commerci\", \"commerci\", \"committe\", \"committe\", \"commod\", \"commod\", \"commun\", \"commun\", \"compens\", \"compens\", \"compens\", \"comput\", \"comput\", \"concern\", \"concern\", \"concern\", \"condit\", \"condit\", \"condit\", \"condit\", \"condit\", \"condit\", \"consid\", \"constraint\", \"constraint\", \"construct\", \"construct\", \"construct\", \"construct\", \"consum\", \"consum\", \"consum\", \"consumpt\", \"consumpt\", \"contact\", \"continu\", \"continu\", \"continu\", \"continu\", \"continu\", \"continu\", \"core\", \"corpor\", \"corpor\", \"could\", \"could\", \"counterbalanc\", \"covid\", \"covid\", \"cpi\", \"cre\", \"cre\", \"credit\", \"credit\", \"credit\", \"credit\", \"credit\", \"current\", \"current\", \"current\", \"current\", \"curv\", \"cyclic\", \"dalla\", \"dealer\", \"debt\", \"debt\", \"debt\", \"decid\", \"decis\", \"decis\", \"decis\", \"declin\", \"declin\", \"declin\", \"declin\", \"declin\", \"declin\", \"default\", \"defens\", \"deficit\", \"deficit\", \"delinqu\", \"delinqu\", \"demand\", \"demand\", \"demand\", \"demand\", \"demand\", \"demand\", \"demograph\", \"difficulti\", \"difficulti\", \"difficulti\", \"diffus\", \"disinflationari\", \"dispos\", \"dissip\", \"distanc\", \"district\", \"dollar\", \"dollar\", \"dollar\", \"dollar\", \"downsid\", \"downsid\", \"downsid\", \"drill\", \"dual\", \"e\", \"ecb\", \"econom\", \"econom\", \"econom\", \"econom\", \"economi\", \"economi\", \"economi\", \"economi\", \"eme\", \"eme\", \"emerg\", \"emerg\", \"emerg\", \"employ\", \"employ\", \"employ\", \"employ\", \"energi\", \"energi\", \"energi\", \"energi\", \"equip\", \"equiti\", \"equiti\", \"equiti\", \"european\", \"european\", \"european\", \"evolv\", \"exclud\", \"exclud\", \"expect\", \"expect\", \"expect\", \"expect\", \"expect\", \"expenditur\", \"expenditur\", \"expenditur\", \"expenditur\", \"export\", \"export\", \"export\", \"extract\", \"factor\", \"factor\", \"factor\", \"factor\", \"factori\", \"famili\", \"februari\", \"februari\", \"februari\", \"februari\", \"feder\", \"feder\", \"feder\", \"feder\", \"financ\", \"financ\", \"financ\", \"financi\", \"financi\", \"financi\", \"financi\", \"find\", \"first\", \"first\", \"first\", \"first\", \"first\", \"fiscal\", \"fiscal\", \"fiscal\", \"fiscal\", \"food\", \"food\", \"forecast\", \"forecast\", \"foreclosur\", \"foreign\", \"foreign\", \"foreign\", \"foreign\", \"foster\", \"four\", \"four\", \"fourth\", \"fourth\", \"fourth\", \"fund\", \"fund\", \"ga\", \"gdp\", \"gdp\", \"gener\", \"gener\", \"gener\", \"gener\", \"gener\", \"gener\", \"goal\", \"good\", \"good\", \"good\", \"good\", \"govern\", \"govern\", \"govern\", \"govern\", \"govern\", \"grade\", \"grew\", \"growth\", \"growth\", \"growth\", \"growth\", \"growth\", \"guidanc\", \"gulf\", \"hardship\", \"headlin\", \"headlin\", \"hispan\", \"home\", \"home\", \"hour\", \"hour\", \"hour\", \"hourli\", \"hourli\", \"hous\", \"hous\", \"hous\", \"household\", \"household\", \"household\", \"human\", \"idiosyncrat\", \"import\", \"import\", \"import\", \"import\", \"improv\", \"improv\", \"improv\", \"improv\", \"improv\", \"improv\", \"increas\", \"increas\", \"increas\", \"increas\", \"increas\", \"increas\", \"index\", \"index\", \"index\", \"index\", \"indic\", \"indic\", \"indic\", \"indic\", \"indic\", \"indic\", \"industri\", \"industri\", \"industri\", \"industri\", \"inflat\", \"inflat\", \"institut\", \"institut\", \"intellectu\", \"intermeet\", \"intermeet\", \"intermeet\", \"intermeet\", \"intermeet\", \"inventori\", \"inventori\", \"inventori\", \"inventori\", \"invest\", \"invest\", \"invest\", \"invest\", \"invest\", \"investor\", \"investor\", \"ip\", \"issuanc\", \"issuanc\", \"item\", \"item\", \"japanes\", \"juli\", \"juli\", \"juli\", \"juli\", \"kingdom\", \"labor\", \"labor\", \"labor\", \"labor\", \"languag\", \"latin\", \"layoff\", \"lend\", \"level\", \"level\", \"level\", \"level\", \"level\", \"level\", \"leverag\", \"like\", \"like\", \"like\", \"like\", \"like\", \"liquid\", \"liquid\", \"liquid\", \"liquid\", \"littl\", \"littl\", \"littl\", \"littl\", \"littl\", \"loan\", \"loan\", \"local\", \"longer\", \"longer\", \"longer\", \"longer\", \"lowest\", \"m2\", \"maintain\", \"maintain\", \"maintain\", \"mandat\", \"mani\", \"mani\", \"mani\", \"mani\", \"mani\", \"manufactur\", \"manufactur\", \"manufactur\", \"march\", \"march\", \"march\", \"march\", \"market\", \"market\", \"market\", \"market\", \"market\", \"markup\", \"matur\", \"matur\", \"maximum\", \"measur\", \"measur\", \"measur\", \"measur\", \"measur\", \"median\", \"medic\", \"meet\", \"meet\", \"meet\", \"meet\", \"member\", \"mexican\", \"mexico\", \"mine\", \"minut\", \"monetari\", \"monetari\", \"money\", \"monitor\", \"month\", \"month\", \"month\", \"month\", \"month\", \"month\", \"mortgag\", \"mortgag\", \"mortgag\", \"motor\", \"motor\", \"multifamili\", \"multifamili\", \"municip\", \"mutual\", \"necessari\", \"net\", \"net\", \"net\", \"net\", \"net\", \"new\", \"new\", \"new\", \"new\", \"new\", \"new\", \"next\", \"next\", \"next\", \"nomin\", \"nomin\", \"nomin\", \"nomin\", \"nondefens\", \"nonfarm\", \"nonfarm\", \"nonfarm\", \"nonfinanci\", \"nonfuel\", \"nonmarket\", \"nonprim\", \"nonresidenti\", \"nonsupervisori\", \"note\", \"note\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"object\", \"object\", \"observ\", \"observ\", \"observ\", \"observ\", \"occup\", \"occupi\", \"optim\", \"order\", \"order\", \"order\", \"origin\", \"outlay\", \"outlook\", \"outlook\", \"outlook\", \"outlookin\", \"output\", \"output\", \"output\", \"output\", \"outstand\", \"overnight\", \"p\", \"pace\", \"pace\", \"pace\", \"pace\", \"pace\", \"pace\", \"paper\", \"particip\", \"particip\", \"particip\", \"particip\", \"path\", \"path\", \"pce\", \"pce\", \"percent\", \"percent\", \"percent\", \"period\", \"period\", \"period\", \"period\", \"period\", \"perman\", \"permit\", \"person\", \"person\", \"polici\", \"polici\", \"polici\", \"possibl\", \"possibl\", \"possibl\", \"postmeet\", \"prepar\", \"prepar\", \"price\", \"price\", \"price\", \"price\", \"price\", \"price\", \"privat\", \"privat\", \"privat\", \"privat\", \"problem\", \"problem\", \"product\", \"product\", \"product\", \"product\", \"profession\", \"profession\", \"project\", \"project\", \"project\", \"project\", \"promot\", \"prospect\", \"prospect\", \"prospect\", \"purchas\", \"purchas\", \"purchas\", \"purchas\", \"qualiti\", \"quarter\", \"quarter\", \"quarter\", \"quarter\", \"quarter\", \"quarter\", \"quot\", \"rang\", \"rang\", \"rang\", \"rang\", \"rang\", \"rate\", \"rate\", \"rate\", \"rate\", \"rate\", \"rate\", \"reaction\", \"real\", \"real\", \"real\", \"real\", \"real\", \"real\", \"recent\", \"recent\", \"recent\", \"recent\", \"recent\", \"recent\", \"region\", \"region\", \"region\", \"reiter\", \"reluct\", \"remain\", \"remain\", \"remain\", \"remain\", \"remain\", \"remain\", \"remov\", \"repo\", \"report\", \"report\", \"report\", \"report\", \"report\", \"report\", \"residenti\", \"residenti\", \"residenti\", \"residu\", \"resili\", \"resolv\", \"restrict\", \"restrict\", \"restrict\", \"retail\", \"retail\", \"retail\", \"retrac\", \"revis\", \"revis\", \"revis\", \"revis\", \"rig\", \"risk\", \"risk\", \"risk\", \"rose\", \"rose\", \"rose\", \"rose\", \"run\", \"run\", \"run\", \"run\", \"sale\", \"sale\", \"sale\", \"saw\", \"saw\", \"saw\", \"schedul\", \"schedul\", \"score\", \"second\", \"second\", \"second\", \"second\", \"sector\", \"sector\", \"sector\", \"sector\", \"secur\", \"secur\", \"senior\", \"sever\", \"sever\", \"sever\", \"sever\", \"sever\", \"sever\", \"shelter\", \"shipment\", \"shortag\", \"shortag\", \"singl\", \"skew\", \"skill\", \"sloo\", \"slow\", \"slow\", \"slow\", \"slow\", \"slow\", \"social\", \"social\", \"softwar\", \"sourc\", \"sourc\", \"sourc\", \"sovereign\", \"specul\", \"spend\", \"spend\", \"spend\", \"spend\", \"spread\", \"spread\", \"stabl\", \"stabl\", \"stabl\", \"staff\", \"staff\", \"staff\", \"stanc\", \"standard\", \"standard\", \"standard\", \"standard\", \"start\", \"start\", \"start\", \"statement\", \"structur\", \"structur\", \"structur\", \"subtract\", \"support\", \"support\", \"support\", \"support\", \"support\", \"support\", \"survey\", \"survey\", \"survey\", \"survey\", \"survey\", \"swap\", \"symmetr\", \"target\", \"tariff\", \"tech\", \"term\", \"term\", \"term\", \"term\", \"term\", \"term\", \"therebi\", \"third\", \"third\", \"third\", \"third\", \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"tool\", \"transitori\", \"transitori\", \"transitori\", \"transport\", \"treasuri\", \"treasuri\", \"truck\", \"truck\", \"uncertainti\", \"uncertainti\", \"undertaken\", \"unfil\", \"unrevis\", \"user\", \"vaccin\", \"valuat\", \"variant\", \"vehicl\", \"vehicl\", \"viru\", \"viru\", \"volatil\", \"volatil\", \"volatil\", \"volatil\", \"volatil\", \"vulner\", \"wage\", \"wage\", \"wage\", \"warrant\", \"weekli\", \"white\", \"workforc\", \"workweek\", \"worth\", \"worth\", \"would\", \"would\", \"would\", \"would\", \"would\", \"year\", \"year\", \"year\", \"year\", \"year\", \"year\", \"yield\", \"yield\", \"\\u2011\", \"\\u2013\", \"\\u2013\"]}, \"R\": 30, \"lambda.step\": 0.01, \"plot.opts\": {\"xlab\": \"PC1\", \"ylab\": \"PC2\"}, \"topic.order\": [1, 4, 5, 6, 3, 2]};\n",
       "\n",
       "function LDAvis_load_lib(url, callback){\n",
       "  var s = document.createElement('script');\n",
       "  s.src = url;\n",
       "  s.async = true;\n",
       "  s.onreadystatechange = s.onload = callback;\n",
       "  s.onerror = function(){console.warn(\"failed to load library \" + url);};\n",
       "  document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
       "}\n",
       "\n",
       "if(typeof(LDAvis) !== \"undefined\"){\n",
       "   // already loaded: just create the visualization\n",
       "   !function(LDAvis){\n",
       "       new LDAvis(\"#\" + \"ldavis_el8848656696564326803059715\", ldavis_el8848656696564326803059715_data);\n",
       "   }(LDAvis);\n",
       "}else if(typeof define === \"function\" && define.amd){\n",
       "   // require.js is available: use it to load d3/LDAvis\n",
       "   require.config({paths: {d3: \"https://d3js.org/d3.v5\"}});\n",
       "   require([\"d3\"], function(d3){\n",
       "      window.d3 = d3;\n",
       "      LDAvis_load_lib(\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.4.0/pyLDAvis/js/ldavis.v3.0.0.js\", function(){\n",
       "        new LDAvis(\"#\" + \"ldavis_el8848656696564326803059715\", ldavis_el8848656696564326803059715_data);\n",
       "      });\n",
       "    });\n",
       "}else{\n",
       "    // require.js not available: dynamically load d3 & LDAvis\n",
       "    LDAvis_load_lib(\"https://d3js.org/d3.v5.js\", function(){\n",
       "         LDAvis_load_lib(\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.4.0/pyLDAvis/js/ldavis.v3.0.0.js\", function(){\n",
       "                 new LDAvis(\"#\" + \"ldavis_el8848656696564326803059715\", ldavis_el8848656696564326803059715_data);\n",
       "            })\n",
       "         });\n",
       "}\n",
       "</script>"
      ],
      "text/plain": [
       "PreparedData(topic_coordinates=              x         y  topics  cluster       Freq\n",
       "topic                                                \n",
       "0      0.253330  0.006737       1        1  21.913542\n",
       "3      0.120147 -0.067642       2        1  20.955585\n",
       "4     -0.123568 -0.077170       3        1  17.616884\n",
       "5      0.024935 -0.063506       4        1  17.016483\n",
       "2     -0.073443  0.305307       5        1  14.290825\n",
       "1     -0.201401 -0.103727       6        1   8.206680, topic_info=          Term         Freq        Total Category  logprob  loglift\n",
       "1559    inflat  6263.000000  6263.000000  Default  30.0000  30.0000\n",
       "2208  particip  5614.000000  5614.000000  Default  29.0000  29.0000\n",
       "2453   quarter  3356.000000  3356.000000  Default  28.0000  28.0000\n",
       "568   committe  2670.000000  2670.000000  Default  27.0000  27.0000\n",
       "2299    polici  2981.000000  2981.000000  Default  26.0000  26.0000\n",
       "...        ...          ...          ...      ...      ...      ...\n",
       "3105    survey   305.523502  1186.744568   Topic6  -4.7608   1.1433\n",
       "2763    second   263.172463   924.631208   Topic6  -4.9100   1.2436\n",
       "1954     month   298.733707  2420.457649   Topic6  -4.7833   0.4081\n",
       "1227     first   273.365030  1251.457186   Topic6  -4.8720   0.9790\n",
       "653    continu   309.376303  3895.935013   Topic6  -4.7483  -0.0329\n",
       "\n",
       "[460 rows x 6 columns], token_table=      Topic      Freq      Term\n",
       "term                           \n",
       "64        1  0.657910  accommod\n",
       "64        2  0.004924  accommod\n",
       "64        4  0.065988  accommod\n",
       "64        5  0.270846  accommod\n",
       "73        1  0.995093    achiev\n",
       "...     ...       ...       ...\n",
       "3576      1  0.005950     yield\n",
       "3576      5  0.993700     yield\n",
       "3594      4  0.996436         ‑\n",
       "3597      4  0.954018         –\n",
       "3597      5  0.027258         –\n",
       "\n",
       "[888 rows x 3 columns], R=30, lambda_step=0.01, plot_opts={'xlab': 'PC1', 'ylab': 'PC2'}, topic_order=[1, 4, 5, 6, 3, 2])"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pyLDAvis.lda_model.prepare(lda_model,bag_of_words,vectorizer)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Topic proportions overtime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "categories = pd.Series([p.category_id for p in paras])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "for idx, year in categories[~(categories == categories.shift(-1))].items():\n",
    "    c = lda_transform[count:count+int(idx)]\n",
    "    year_prop[int(year)] = 100 * (c.sum(axis=0) / c.sum())\n",
    "    count = idx\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "yearly_prop = pd.DataFrame(year_prop).T.sort_index()\n",
    "yearly_prop.columns = yearly_prop.columns.map(topic_dict)\n",
    "yearly_prop.plot(kind='area',stacked=True,figsize=(15,5))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## <a name=\"finbert\"></a>FinBERT\n",
    "FinBERT is a pre-trained transformer model, specifically trained for the finance domain. https://github.com/ProsusAI/finBERT. The sentiment scoring component derives from Financial PhraseBank dataset. \n",
    "Here we will score each old text instead of our lemmatised 'new text'. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "589bbd16781d4f60b0163ccb1ce37d94",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "tokenizer_config.json:   0%|          | 0.00/252 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "7687660e2b9649f987d5367ffbeb35be",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "config.json:   0%|          | 0.00/758 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "4201ea8e9cb645e188504bed3496c382",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "31bc5241493544a384f4e0b682650bb0",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "special_tokens_map.json:   0%|          | 0.00/112 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "59d396800b37482dad866602e0ebb064",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "pytorch_model.bin:   0%|          | 0.00/438M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Load tokenizer and model\n",
    "transformer_tokenizer = AutoTokenizer.from_pretrained(\"ProsusAI/finbert\")\n",
    "transformer_model = AutoModelForSequenceClassification.from_pretrained(\"ProsusAI/finbert\",output_hidden_states=True,output_attentions=False)\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "text = ['Participants','remarked','that','inflation','readings','had','been','higher','and','were','more','persistent','and','widespread','than','previously','anticipated','.']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['[CLS]', 'and', 'the', 'conduct', 'of', 'monetary', 'policy', 'over', 'the', 'inter', '##me', '##eti', '##ng', 'period', '.', '[SEP]']\n"
     ]
    }
   ],
   "source": [
    "print(transformer_tokenizer.convert_ids_to_tokens(transformer_tokenizer(paras[0].tokens,padding=True,is_split_into_words=True)['input_ids']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Token indices sequence length is longer than the specified maximum sequence length for this model (545 > 512). Running this sequence through the model will result in indexing errors\n"
     ]
    }
   ],
   "source": [
    "#How many our of documents get truncated?\n",
    "plengths = []\n",
    "for p in paras:\n",
    "    plengths.append(len(transformer_tokenizer.encode(p.tokens,padding=True,is_split_into_words=True)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.lines.Line2D at 0x156c515d0>"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 700x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "sns.displot(plengths,height=7).set(title='Document token size')\n",
    "plt.axvline(transformer_tokenizer.model_max_length)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Most documents have tokens less than the maximum model size, which means we don't have to worry about truncation, in fact we could probably truncate our tokens to 350"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Extracting features from latest transcript"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "file_id = '20211215'\n",
    "latest_minutes = fed_mins.get_paras(file_id = file_id,flatten=True,stem=True)\n",
    "tokenizer_settings = dict(is_split_into_words=True,max_length=350,padding='max_length',truncation=True,return_tensors=\"pt\")\n",
    "\n",
    "document_feat = FeatureProcessor(latest_minutes,\n",
    "                                transformer_model=transformer_model,\n",
    "                                transformer_tokenizer=transformer_tokenizer,\n",
    "                                tokenizer_settings=tokenizer_settings,\n",
    "                                lda_model=lda_model,\n",
    "                                lda_vec=vectorizer,\n",
    "                                lda_topic_dict=topic_dict,batch_size=30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "latest_minutes = document_feat.get_features(sentiment=True,embedding=True,topic=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "def corpus_stats(corpus):\n",
    "    ids = [(n,f.category_id,f.file_id) for n,f in enumerate(corpus)]\n",
    "    df_ids = pd.DataFrame(ids,columns=['idx','category_id','file_id'])\n",
    "    start_idx = df_ids.drop_duplicates(['category_id','file_id'],keep='first')\n",
    "    end_idx = df_ids.drop_duplicates(['category_id','file_id'],keep='last')\n",
    "\n",
    "    idx = start_idx.merge(end_idx,on=['category_id','file_id'],suffixes=('_start','_end'))\n",
    "\n",
    "    stats =[]\n",
    "    corpus_sent = corpus.extract_features('sentiment')\n",
    "    corpus_topic = corpus.extract_features('topics')\n",
    "\n",
    "    for s,cat_id,file_id,e in idx.values:\n",
    "        net_tone = [s['logits'][0] - s['logits'][1] for s in corpus_sent[s:e]]\n",
    "        topic_dist = [s['topic_dist'] for s in corpus_topic[s:e]]\n",
    "        topic_sentiment = np.asarray(topic_dist) * np.asarray(net_tone).reshape(-1,1)\n",
    "        topic_mean_sent = topic_sentiment.mean(axis=0).tolist()\n",
    "\n",
    "        stats.append((cat_id,file_id,*topic_mean_sent))\n",
    "    return stats\n",
    "\n",
    "\n",
    "latest_stats = corpus_stats(latest_minutes)\n",
    "latest_stats = pd.DataFrame(latest_stats,columns = ['category_id','file_id']+list(topic_dict.values()))\n",
    "latest_stats['month'] = pd.to_datetime(latest_stats['file_id']).dt.to_period('M')\n",
    "latest_stats.set_index(['month'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'Average net-tone per topic for file:20211215'}, xlabel='month'>"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "latest_stats.plot(kind='bar',title='Average net-tone per topic for file:{}'.format(file_id),figsize=(10,5))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "without context from previous transcript, this doesn't tell us much "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "last_year_minutes = fed_mins.get_paras(category_id = '2021',flatten=True,stem=True)\n",
    "\n",
    "document_feat = FeatureProcessor(last_year_minutes,\n",
    "                                transformer_model=transformer_model,\n",
    "                                transformer_tokenizer=transformer_tokenizer,\n",
    "                                tokenizer_settings=tokenizer_settings,\n",
    "                                lda_model=lda_model,\n",
    "                                lda_vec=vectorizer,\n",
    "                                lda_topic_dict=topic_dict,batch_size=30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n"
     ]
    }
   ],
   "source": [
    "last_year_minutes = document_feat.get_features()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "last_year_stats = pd.DataFrame(corpus_stats(last_year_minutes),columns = ['category_id','file_id']+list(topic_dict.values()))\n",
    "\n",
    "last_year_stats['month'] = pd.to_datetime(last_year_stats['file_id']).dt.to_period('M')\n",
    "last_year_stats.set_index(['month'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'Topic Sentiment across time'}, xlabel='month'>"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "last_year_stats[[i for i in last_year_stats.columns if i not in ['category_id','file_id']]].plot(kind='line',figsize=(10,5),title='Topic Sentiment across time')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "last_year_stats.to_csv('2011-sentiment-by-topic.csv', index=False)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### SAVE?  later."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "#Save Transformer models\n",
    "save_path = os.path.join(current_directory,\"Model\")\n",
    "if not os.path.exists(save_path):\n",
    "    os.mkdir(save_path)\n",
    "\n",
    "    \n",
    "transformer_model.save_pretrained(os.path.join(save_path,\"transformer_model\"))\n",
    "#Save LDA,vectorizer,topic_dictionary\n",
    "transformer_tokenizer.save_pretrained(os.path.join(save_path,\"transformer_tokenizer\"))\n",
    "#save tokenizer settings\n",
    "pickle.dump(tokenizer_settings,open(os.path.join(save_path,\"tokenizer_settings.pkl\"),\"wb\"))\n",
    "\n",
    "#save lda model\n",
    "\n",
    "with open(os.path.join(save_path,\"lda_models.pkl\"),'wb') as models:\n",
    "    pickle.dump((lda_model,vectorizer,topic_dict),models)\n",
    "\n",
    "\"\"\"\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
